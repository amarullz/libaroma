# 1 "../../../libs/harfbuzz-ng/src/hb-ot-tag.cc"
# 1 "<command-line>"
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdc-predef.h" 1 3 4
# 1 "<command-line>" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-ot-tag.cc"
# 29 "../../../libs/harfbuzz-ng/src/hb-ot-tag.cc"
# 1 "../../../libs/harfbuzz-ng/src/hb-private.hh" 1
# 36 "../../../libs/harfbuzz-ng/src/hb-private.hh"
# 1 "../../../libs/harfbuzz-ng/src/hb.h" 1
# 31 "../../../libs/harfbuzz-ng/src/hb.h"
# 1 "../../../libs/harfbuzz-ng/src/hb-blob.h" 1
# 34 "../../../libs/harfbuzz-ng/src/hb-blob.h"
# 1 "../../../libs/harfbuzz-ng/src/hb-common.h" 1
# 65 "../../../libs/harfbuzz-ng/src/hb-common.h"
# 1 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stdint.h" 1 3 4
# 9 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stdint.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdint.h" 1 3 4
# 25 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdint.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\features.h" 1 3 4
# 378 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\features.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\cdefs.h" 1 3 4
# 385 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\cdefs.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\wordsize.h" 1 3 4
# 386 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\cdefs.h" 2 3 4
# 379 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\features.h" 2 3 4
# 402 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\features.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\gnu\\stubs.h" 1 3 4
# 10 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\gnu\\stubs.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\gnu\\stubs-hard.h" 1 3 4
# 11 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\gnu\\stubs.h" 2 3 4
# 403 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\features.h" 2 3 4
# 26 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdint.h" 2 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\wchar.h" 1 3 4
# 27 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdint.h" 2 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\wordsize.h" 1 3 4
# 28 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdint.h" 2 3 4
# 36 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdint.h" 3 4
typedef signed char int8_t;
typedef short int int16_t;
typedef int int32_t;



__extension__
typedef long long int int64_t;




typedef unsigned char uint8_t;
typedef unsigned short int uint16_t;

typedef unsigned int uint32_t;





__extension__
typedef unsigned long long int uint64_t;






typedef signed char int_least8_t;
typedef short int int_least16_t;
typedef int int_least32_t;



__extension__
typedef long long int int_least64_t;



typedef unsigned char uint_least8_t;
typedef unsigned short int uint_least16_t;
typedef unsigned int uint_least32_t;



__extension__
typedef unsigned long long int uint_least64_t;






typedef signed char int_fast8_t;





typedef int int_fast16_t;
typedef int int_fast32_t;
__extension__
typedef long long int int_fast64_t;



typedef unsigned char uint_fast8_t;





typedef unsigned int uint_fast16_t;
typedef unsigned int uint_fast32_t;
__extension__
typedef unsigned long long int uint_fast64_t;
# 125 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdint.h" 3 4
typedef int intptr_t;


typedef unsigned int uintptr_t;
# 137 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdint.h" 3 4
__extension__
typedef long long int intmax_t;
__extension__
typedef unsigned long long int uintmax_t;
# 10 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stdint.h" 2 3 4
# 66 "../../../libs/harfbuzz-ng/src/hb-common.h" 2




extern "C" {


typedef int hb_bool_t;

typedef uint32_t hb_codepoint_t;
typedef int32_t hb_position_t;
typedef uint32_t hb_mask_t;

typedef union _hb_var_int_t {
  uint32_t u32;
  int32_t i32;
  uint16_t u16[2];
  int16_t i16[2];
  uint8_t u8[4];
  int8_t i8[4];
} hb_var_int_t;




typedef uint32_t hb_tag_t;
# 101 "../../../libs/harfbuzz-ng/src/hb-common.h"
hb_tag_t
hb_tag_from_string (const char *str, int len);


void
hb_tag_to_string (hb_tag_t tag, char *buf);




typedef enum {
  HB_DIRECTION_INVALID = 0,
  HB_DIRECTION_LTR = 4,
  HB_DIRECTION_RTL,
  HB_DIRECTION_TTB,
  HB_DIRECTION_BTT
} hb_direction_t;


hb_direction_t
hb_direction_from_string (const char *str, int len);

const char *
hb_direction_to_string (hb_direction_t direction);
# 137 "../../../libs/harfbuzz-ng/src/hb-common.h"
typedef const struct hb_language_impl_t *hb_language_t;


hb_language_t
hb_language_from_string (const char *str, int len);

const char *
hb_language_to_string (hb_language_t language);



hb_language_t
hb_language_get_default (void);







typedef enum
{
          HB_SCRIPT_COMMON = ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('y'))<<16)|(((uint8_t)('y'))<<8)|((uint8_t)('y')))),
          HB_SCRIPT_INHERITED = ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('i'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('h')))),
          HB_SCRIPT_UNKNOWN = ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('z'))<<16)|(((uint8_t)('z'))<<8)|((uint8_t)('z')))),

          HB_SCRIPT_ARABIC = ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('r'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('b')))),
          HB_SCRIPT_ARMENIAN = ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('r'))<<16)|(((uint8_t)('m'))<<8)|((uint8_t)('n')))),
          HB_SCRIPT_BENGALI = ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('g')))),
          HB_SCRIPT_CYRILLIC = ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('y'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('l')))),
          HB_SCRIPT_DEVANAGARI = ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('v'))<<8)|((uint8_t)('a')))),
          HB_SCRIPT_GEORGIAN = ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('o'))<<8)|((uint8_t)('r')))),
          HB_SCRIPT_GREEK = ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('r'))<<16)|(((uint8_t)('e'))<<8)|((uint8_t)('k')))),
          HB_SCRIPT_GUJARATI = ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('u'))<<16)|(((uint8_t)('j'))<<8)|((uint8_t)('r')))),
          HB_SCRIPT_GURMUKHI = ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('u'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('u')))),
          HB_SCRIPT_HANGUL = ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('g')))),
          HB_SCRIPT_HAN = ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_HEBREW = ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('b'))<<8)|((uint8_t)('r')))),
          HB_SCRIPT_HIRAGANA = ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('i'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('a')))),
          HB_SCRIPT_KANNADA = ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('n'))<<16)|(((uint8_t)('d'))<<8)|((uint8_t)('a')))),
          HB_SCRIPT_KATAKANA = ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('a')))),
          HB_SCRIPT_LAO = ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('o'))<<8)|((uint8_t)('o')))),
          HB_SCRIPT_LATIN = ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('t'))<<8)|((uint8_t)('n')))),
          HB_SCRIPT_MALAYALAM = ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('l'))<<16)|(((uint8_t)('y'))<<8)|((uint8_t)('m')))),
          HB_SCRIPT_ORIYA = ((hb_tag_t)((((uint8_t)('O'))<<24)|(((uint8_t)('r'))<<16)|(((uint8_t)('y'))<<8)|((uint8_t)('a')))),
          HB_SCRIPT_TAMIL = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('m'))<<8)|((uint8_t)('l')))),
          HB_SCRIPT_TELUGU = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('u')))),
          HB_SCRIPT_THAI = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('h'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('i')))),

          HB_SCRIPT_TIBETAN = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('i'))<<16)|(((uint8_t)('b'))<<8)|((uint8_t)('t')))),

          HB_SCRIPT_BOPOMOFO = ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('o'))<<16)|(((uint8_t)('p'))<<8)|((uint8_t)('o')))),
          HB_SCRIPT_BRAILLE = ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('r'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_CANADIAN_SYLLABICS = ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('s')))),
          HB_SCRIPT_CHEROKEE = ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('h'))<<16)|(((uint8_t)('e'))<<8)|((uint8_t)('r')))),
          HB_SCRIPT_ETHIOPIC = ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('t'))<<16)|(((uint8_t)('h'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_KHMER = ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('h'))<<16)|(((uint8_t)('m'))<<8)|((uint8_t)('r')))),
          HB_SCRIPT_MONGOLIAN = ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('o'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('g')))),
          HB_SCRIPT_MYANMAR = ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('y'))<<16)|(((uint8_t)('m'))<<8)|((uint8_t)('r')))),
          HB_SCRIPT_OGHAM = ((hb_tag_t)((((uint8_t)('O'))<<24)|(((uint8_t)('g'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('m')))),
          HB_SCRIPT_RUNIC = ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('u'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('r')))),
          HB_SCRIPT_SINHALA = ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('i'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('h')))),
          HB_SCRIPT_SYRIAC = ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('y'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('c')))),
          HB_SCRIPT_THAANA = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('h'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('a')))),
          HB_SCRIPT_YI = ((hb_tag_t)((((uint8_t)('Y'))<<24)|(((uint8_t)('i'))<<16)|(((uint8_t)('i'))<<8)|((uint8_t)('i')))),

          HB_SCRIPT_DESERET = ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('s'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('t')))),
          HB_SCRIPT_GOTHIC = ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('o'))<<16)|(((uint8_t)('t'))<<8)|((uint8_t)('h')))),
          HB_SCRIPT_OLD_ITALIC = ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('t'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('l')))),

          HB_SCRIPT_BUHID = ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('u'))<<16)|(((uint8_t)('h'))<<8)|((uint8_t)('d')))),
          HB_SCRIPT_HANUNOO = ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('o')))),
          HB_SCRIPT_TAGALOG = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('g'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('g')))),
          HB_SCRIPT_TAGBANWA = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('g'))<<8)|((uint8_t)('b')))),

          HB_SCRIPT_CYPRIOT = ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('p'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('t')))),
          HB_SCRIPT_LIMBU = ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('i'))<<16)|(((uint8_t)('m'))<<8)|((uint8_t)('b')))),
          HB_SCRIPT_LINEAR_B = ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('i'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('b')))),
          HB_SCRIPT_OSMANYA = ((hb_tag_t)((((uint8_t)('O'))<<24)|(((uint8_t)('s'))<<16)|(((uint8_t)('m'))<<8)|((uint8_t)('a')))),
          HB_SCRIPT_SHAVIAN = ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('h'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('w')))),
          HB_SCRIPT_TAI_LE = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('e')))),
          HB_SCRIPT_UGARITIC = ((hb_tag_t)((((uint8_t)('U'))<<24)|(((uint8_t)('g'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('r')))),

          HB_SCRIPT_BUGINESE = ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('u'))<<16)|(((uint8_t)('g'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_COPTIC = ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('o'))<<16)|(((uint8_t)('p'))<<8)|((uint8_t)('t')))),
          HB_SCRIPT_GLAGOLITIC = ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('l'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('g')))),
          HB_SCRIPT_KHAROSHTHI = ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('h'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('r')))),
          HB_SCRIPT_NEW_TAI_LUE = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('u')))),
          HB_SCRIPT_OLD_PERSIAN = ((hb_tag_t)((((uint8_t)('X'))<<24)|(((uint8_t)('p'))<<16)|(((uint8_t)('e'))<<8)|((uint8_t)('o')))),
          HB_SCRIPT_SYLOTI_NAGRI = ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('y'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('o')))),
          HB_SCRIPT_TIFINAGH = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('f'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('g')))),

          HB_SCRIPT_BALINESE = ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_CUNEIFORM = ((hb_tag_t)((((uint8_t)('X'))<<24)|(((uint8_t)('s'))<<16)|(((uint8_t)('u'))<<8)|((uint8_t)('x')))),
          HB_SCRIPT_NKO = ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('k'))<<16)|(((uint8_t)('o'))<<8)|((uint8_t)('o')))),
          HB_SCRIPT_PHAGS_PA = ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('h'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('g')))),
          HB_SCRIPT_PHOENICIAN = ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('h'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('x')))),

          HB_SCRIPT_CARIAN = ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_CHAM = ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('h'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('m')))),
          HB_SCRIPT_KAYAH_LI = ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_LEPCHA = ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('p'))<<8)|((uint8_t)('c')))),
          HB_SCRIPT_LYCIAN = ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('y'))<<16)|(((uint8_t)('c'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_LYDIAN = ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('y'))<<16)|(((uint8_t)('d'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_OL_CHIKI = ((hb_tag_t)((((uint8_t)('O'))<<24)|(((uint8_t)('l'))<<16)|(((uint8_t)('c'))<<8)|((uint8_t)('k')))),
          HB_SCRIPT_REJANG = ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('j'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('g')))),
          HB_SCRIPT_SAURASHTRA = ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('u'))<<8)|((uint8_t)('r')))),
          HB_SCRIPT_SUNDANESE = ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('u'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('d')))),
          HB_SCRIPT_VAI = ((hb_tag_t)((((uint8_t)('V'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('i'))<<8)|((uint8_t)('i')))),

          HB_SCRIPT_AVESTAN = ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('v'))<<16)|(((uint8_t)('s'))<<8)|((uint8_t)('t')))),
          HB_SCRIPT_BAMUM = ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('m'))<<8)|((uint8_t)('u')))),
          HB_SCRIPT_EGYPTIAN_HIEROGLYPHS = ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('g'))<<16)|(((uint8_t)('y'))<<8)|((uint8_t)('p')))),
          HB_SCRIPT_IMPERIAL_ARAMAIC = ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('r'))<<16)|(((uint8_t)('m'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_INSCRIPTIONAL_PAHLAVI = ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('h'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_INSCRIPTIONAL_PARTHIAN = ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('r'))<<16)|(((uint8_t)('t'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_JAVANESE = ((hb_tag_t)((((uint8_t)('J'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('v'))<<8)|((uint8_t)('a')))),
          HB_SCRIPT_KAITHI = ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('t'))<<16)|(((uint8_t)('h'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_LISU = ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('i'))<<16)|(((uint8_t)('s'))<<8)|((uint8_t)('u')))),
          HB_SCRIPT_MEETEI_MAYEK = ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('t'))<<16)|(((uint8_t)('e'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_OLD_SOUTH_ARABIAN = ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('b')))),
          HB_SCRIPT_OLD_TURKIC = ((hb_tag_t)((((uint8_t)('O'))<<24)|(((uint8_t)('r'))<<16)|(((uint8_t)('k'))<<8)|((uint8_t)('h')))),
          HB_SCRIPT_SAMARITAN = ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('m'))<<8)|((uint8_t)('r')))),
          HB_SCRIPT_TAI_THAM = ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('a')))),
          HB_SCRIPT_TAI_VIET = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('v'))<<8)|((uint8_t)('t')))),

          HB_SCRIPT_BATAK = ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('t'))<<8)|((uint8_t)('k')))),
          HB_SCRIPT_BRAHMI = ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('r'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('h')))),
          HB_SCRIPT_MANDAIC = ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('d')))),

          HB_SCRIPT_CHAKMA = ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('k'))<<8)|((uint8_t)('m')))),
          HB_SCRIPT_MEROITIC_CURSIVE = ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('c')))),
          HB_SCRIPT_MEROITIC_HIEROGLYPHS = ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('o')))),
          HB_SCRIPT_MIAO = ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('l'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('d')))),
          HB_SCRIPT_SHARADA = ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('h'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('d')))),
          HB_SCRIPT_SORA_SOMPENG = ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('o'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('a')))),
          HB_SCRIPT_TAKRI = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('k'))<<8)|((uint8_t)('r')))),

          HB_SCRIPT_BASSA_VAH = ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('s'))<<8)|((uint8_t)('s')))),
          HB_SCRIPT_CAUCASIAN_ALBANIAN = ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('g'))<<16)|(((uint8_t)('h'))<<8)|((uint8_t)('b')))),
          HB_SCRIPT_DUPLOYAN = ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('u'))<<16)|(((uint8_t)('p'))<<8)|((uint8_t)('l')))),
          HB_SCRIPT_ELBASAN = ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('l'))<<16)|(((uint8_t)('b'))<<8)|((uint8_t)('a')))),
          HB_SCRIPT_GRANTHA = ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('r'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('n')))),
          HB_SCRIPT_KHOJKI = ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('h'))<<16)|(((uint8_t)('o'))<<8)|((uint8_t)('j')))),
          HB_SCRIPT_KHUDAWADI = ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('i'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('d')))),
          HB_SCRIPT_LINEAR_A = ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('i'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('a')))),
          HB_SCRIPT_MAHAJANI = ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('h'))<<8)|((uint8_t)('j')))),
          HB_SCRIPT_MANICHAEAN = ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_MENDE_KIKAKUI = ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('d')))),
          HB_SCRIPT_MODI = ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('o'))<<16)|(((uint8_t)('d'))<<8)|((uint8_t)('i')))),
          HB_SCRIPT_MRO = ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('r'))<<16)|(((uint8_t)('o'))<<8)|((uint8_t)('o')))),
          HB_SCRIPT_NABATAEAN = ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('b'))<<16)|(((uint8_t)('a'))<<8)|((uint8_t)('t')))),
          HB_SCRIPT_OLD_NORTH_ARABIAN = ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('b')))),
          HB_SCRIPT_OLD_PERMIC = ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('m')))),
          HB_SCRIPT_PAHAWH_HMONG = ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('m'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('g')))),
          HB_SCRIPT_PALMYRENE = ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('m')))),
          HB_SCRIPT_PAU_CIN_HAU = ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('u'))<<8)|((uint8_t)('c')))),
          HB_SCRIPT_PSALTER_PAHLAVI = ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('h'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('p')))),
          HB_SCRIPT_SIDDHAM = ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('i'))<<16)|(((uint8_t)('d'))<<8)|((uint8_t)('d')))),
          HB_SCRIPT_TIRHUTA = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('i'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('h')))),
          HB_SCRIPT_WARANG_CITI = ((hb_tag_t)((((uint8_t)('W'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('a')))),


  HB_SCRIPT_INVALID = ((hb_tag_t)((((uint8_t)(0))<<24)|(((uint8_t)(0))<<16)|(((uint8_t)(0))<<8)|((uint8_t)(0)))),
# 309 "../../../libs/harfbuzz-ng/src/hb-common.h"
  _HB_SCRIPT_MAX_VALUE = ((hb_tag_t)((((uint8_t)(0xff))<<24)|(((uint8_t)(0xff))<<16)|(((uint8_t)(0xff))<<8)|((uint8_t)(0xff)))),
  _HB_SCRIPT_MAX_VALUE_SIGNED = ((hb_tag_t)((((uint8_t)(0x7f))<<24)|(((uint8_t)(0xff))<<16)|(((uint8_t)(0xff))<<8)|((uint8_t)(0xff))))

} hb_script_t;




hb_script_t
hb_script_from_iso15924_tag (hb_tag_t tag);



hb_script_t
hb_script_from_string (const char *s, int len);

hb_tag_t
hb_script_to_iso15924_tag (hb_script_t script);

hb_direction_t
hb_script_get_horizontal_direction (hb_script_t script);




typedef struct hb_user_data_key_t {

  char unused;
} hb_user_data_key_t;

typedef void (*hb_destroy_func_t) (void *user_data);


}
# 35 "../../../libs/harfbuzz-ng/src/hb-blob.h" 2

extern "C" {
# 58 "../../../libs/harfbuzz-ng/src/hb-blob.h"
typedef enum {
  HB_MEMORY_MODE_DUPLICATE,
  HB_MEMORY_MODE_READONLY,
  HB_MEMORY_MODE_WRITABLE,
  HB_MEMORY_MODE_READONLY_MAY_MAKE_WRITABLE
} hb_memory_mode_t;

typedef struct hb_blob_t hb_blob_t;

hb_blob_t *
hb_blob_create (const char *data,
  unsigned int length,
  hb_memory_mode_t mode,
  void *user_data,
  hb_destroy_func_t destroy);







hb_blob_t *
hb_blob_create_sub_blob (hb_blob_t *parent,
    unsigned int offset,
    unsigned int length);

hb_blob_t *
hb_blob_get_empty (void);

hb_blob_t *
hb_blob_reference (hb_blob_t *blob);

void
hb_blob_destroy (hb_blob_t *blob);

hb_bool_t
hb_blob_set_user_data (hb_blob_t *blob,
         hb_user_data_key_t *key,
         void * data,
         hb_destroy_func_t destroy,
         hb_bool_t replace);


void *
hb_blob_get_user_data (hb_blob_t *blob,
         hb_user_data_key_t *key);


void
hb_blob_make_immutable (hb_blob_t *blob);

hb_bool_t
hb_blob_is_immutable (hb_blob_t *blob);


unsigned int
hb_blob_get_length (hb_blob_t *blob);

const char *
hb_blob_get_data (hb_blob_t *blob, unsigned int *length);

char *
hb_blob_get_data_writable (hb_blob_t *blob, unsigned int *length);


}
# 32 "../../../libs/harfbuzz-ng/src/hb.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-buffer.h" 1
# 37 "../../../libs/harfbuzz-ng/src/hb-buffer.h"
# 1 "../../../libs/harfbuzz-ng/src/hb-common.h" 1
# 38 "../../../libs/harfbuzz-ng/src/hb-buffer.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-unicode.h" 1
# 38 "../../../libs/harfbuzz-ng/src/hb-unicode.h"
# 1 "../../../libs/harfbuzz-ng/src/hb-common.h" 1
# 39 "../../../libs/harfbuzz-ng/src/hb-unicode.h" 2

extern "C" {





typedef enum
{
  HB_UNICODE_GENERAL_CATEGORY_CONTROL,
  HB_UNICODE_GENERAL_CATEGORY_FORMAT,
  HB_UNICODE_GENERAL_CATEGORY_UNASSIGNED,
  HB_UNICODE_GENERAL_CATEGORY_PRIVATE_USE,
  HB_UNICODE_GENERAL_CATEGORY_SURROGATE,
  HB_UNICODE_GENERAL_CATEGORY_LOWERCASE_LETTER,
  HB_UNICODE_GENERAL_CATEGORY_MODIFIER_LETTER,
  HB_UNICODE_GENERAL_CATEGORY_OTHER_LETTER,
  HB_UNICODE_GENERAL_CATEGORY_TITLECASE_LETTER,
  HB_UNICODE_GENERAL_CATEGORY_UPPERCASE_LETTER,
  HB_UNICODE_GENERAL_CATEGORY_SPACING_MARK,
  HB_UNICODE_GENERAL_CATEGORY_ENCLOSING_MARK,
  HB_UNICODE_GENERAL_CATEGORY_NON_SPACING_MARK,
  HB_UNICODE_GENERAL_CATEGORY_DECIMAL_NUMBER,
  HB_UNICODE_GENERAL_CATEGORY_LETTER_NUMBER,
  HB_UNICODE_GENERAL_CATEGORY_OTHER_NUMBER,
  HB_UNICODE_GENERAL_CATEGORY_CONNECT_PUNCTUATION,
  HB_UNICODE_GENERAL_CATEGORY_DASH_PUNCTUATION,
  HB_UNICODE_GENERAL_CATEGORY_CLOSE_PUNCTUATION,
  HB_UNICODE_GENERAL_CATEGORY_FINAL_PUNCTUATION,
  HB_UNICODE_GENERAL_CATEGORY_INITIAL_PUNCTUATION,
  HB_UNICODE_GENERAL_CATEGORY_OTHER_PUNCTUATION,
  HB_UNICODE_GENERAL_CATEGORY_OPEN_PUNCTUATION,
  HB_UNICODE_GENERAL_CATEGORY_CURRENCY_SYMBOL,
  HB_UNICODE_GENERAL_CATEGORY_MODIFIER_SYMBOL,
  HB_UNICODE_GENERAL_CATEGORY_MATH_SYMBOL,
  HB_UNICODE_GENERAL_CATEGORY_OTHER_SYMBOL,
  HB_UNICODE_GENERAL_CATEGORY_LINE_SEPARATOR,
  HB_UNICODE_GENERAL_CATEGORY_PARAGRAPH_SEPARATOR,
  HB_UNICODE_GENERAL_CATEGORY_SPACE_SEPARATOR
} hb_unicode_general_category_t;
# 87 "../../../libs/harfbuzz-ng/src/hb-unicode.h"
typedef enum
{
  HB_UNICODE_COMBINING_CLASS_NOT_REORDERED = 0,
  HB_UNICODE_COMBINING_CLASS_OVERLAY = 1,
  HB_UNICODE_COMBINING_CLASS_NUKTA = 7,
  HB_UNICODE_COMBINING_CLASS_KANA_VOICING = 8,
  HB_UNICODE_COMBINING_CLASS_VIRAMA = 9,


  HB_UNICODE_COMBINING_CLASS_CCC10 = 10,
  HB_UNICODE_COMBINING_CLASS_CCC11 = 11,
  HB_UNICODE_COMBINING_CLASS_CCC12 = 12,
  HB_UNICODE_COMBINING_CLASS_CCC13 = 13,
  HB_UNICODE_COMBINING_CLASS_CCC14 = 14,
  HB_UNICODE_COMBINING_CLASS_CCC15 = 15,
  HB_UNICODE_COMBINING_CLASS_CCC16 = 16,
  HB_UNICODE_COMBINING_CLASS_CCC17 = 17,
  HB_UNICODE_COMBINING_CLASS_CCC18 = 18,
  HB_UNICODE_COMBINING_CLASS_CCC19 = 19,
  HB_UNICODE_COMBINING_CLASS_CCC20 = 20,
  HB_UNICODE_COMBINING_CLASS_CCC21 = 21,
  HB_UNICODE_COMBINING_CLASS_CCC22 = 22,
  HB_UNICODE_COMBINING_CLASS_CCC23 = 23,
  HB_UNICODE_COMBINING_CLASS_CCC24 = 24,
  HB_UNICODE_COMBINING_CLASS_CCC25 = 25,
  HB_UNICODE_COMBINING_CLASS_CCC26 = 26,


  HB_UNICODE_COMBINING_CLASS_CCC27 = 27,
  HB_UNICODE_COMBINING_CLASS_CCC28 = 28,
  HB_UNICODE_COMBINING_CLASS_CCC29 = 29,
  HB_UNICODE_COMBINING_CLASS_CCC30 = 30,
  HB_UNICODE_COMBINING_CLASS_CCC31 = 31,
  HB_UNICODE_COMBINING_CLASS_CCC32 = 32,
  HB_UNICODE_COMBINING_CLASS_CCC33 = 33,
  HB_UNICODE_COMBINING_CLASS_CCC34 = 34,
  HB_UNICODE_COMBINING_CLASS_CCC35 = 35,


  HB_UNICODE_COMBINING_CLASS_CCC36 = 36,


  HB_UNICODE_COMBINING_CLASS_CCC84 = 84,
  HB_UNICODE_COMBINING_CLASS_CCC91 = 91,


  HB_UNICODE_COMBINING_CLASS_CCC103 = 103,
  HB_UNICODE_COMBINING_CLASS_CCC107 = 107,


  HB_UNICODE_COMBINING_CLASS_CCC118 = 118,
  HB_UNICODE_COMBINING_CLASS_CCC122 = 122,


  HB_UNICODE_COMBINING_CLASS_CCC129 = 129,
  HB_UNICODE_COMBINING_CLASS_CCC130 = 130,
  HB_UNICODE_COMBINING_CLASS_CCC133 = 132,


  HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW_LEFT = 200,
  HB_UNICODE_COMBINING_CLASS_ATTACHED_BELOW = 202,
  HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE = 214,
  HB_UNICODE_COMBINING_CLASS_ATTACHED_ABOVE_RIGHT = 216,
  HB_UNICODE_COMBINING_CLASS_BELOW_LEFT = 218,
  HB_UNICODE_COMBINING_CLASS_BELOW = 220,
  HB_UNICODE_COMBINING_CLASS_BELOW_RIGHT = 222,
  HB_UNICODE_COMBINING_CLASS_LEFT = 224,
  HB_UNICODE_COMBINING_CLASS_RIGHT = 226,
  HB_UNICODE_COMBINING_CLASS_ABOVE_LEFT = 228,
  HB_UNICODE_COMBINING_CLASS_ABOVE = 230,
  HB_UNICODE_COMBINING_CLASS_ABOVE_RIGHT = 232,
  HB_UNICODE_COMBINING_CLASS_DOUBLE_BELOW = 233,
  HB_UNICODE_COMBINING_CLASS_DOUBLE_ABOVE = 234,

  HB_UNICODE_COMBINING_CLASS_IOTA_SUBSCRIPT = 240,

  HB_UNICODE_COMBINING_CLASS_INVALID = 255
} hb_unicode_combining_class_t;






typedef struct hb_unicode_funcs_t hb_unicode_funcs_t;





hb_unicode_funcs_t *
hb_unicode_funcs_get_default (void);


hb_unicode_funcs_t *
hb_unicode_funcs_create (hb_unicode_funcs_t *parent);

hb_unicode_funcs_t *
hb_unicode_funcs_get_empty (void);

hb_unicode_funcs_t *
hb_unicode_funcs_reference (hb_unicode_funcs_t *ufuncs);

void
hb_unicode_funcs_destroy (hb_unicode_funcs_t *ufuncs);

hb_bool_t
hb_unicode_funcs_set_user_data (hb_unicode_funcs_t *ufuncs,
           hb_user_data_key_t *key,
           void * data,
           hb_destroy_func_t destroy,
    hb_bool_t replace);


void *
hb_unicode_funcs_get_user_data (hb_unicode_funcs_t *ufuncs,
           hb_user_data_key_t *key);


void
hb_unicode_funcs_make_immutable (hb_unicode_funcs_t *ufuncs);

hb_bool_t
hb_unicode_funcs_is_immutable (hb_unicode_funcs_t *ufuncs);

hb_unicode_funcs_t *
hb_unicode_funcs_get_parent (hb_unicode_funcs_t *ufuncs);
# 222 "../../../libs/harfbuzz-ng/src/hb-unicode.h"
typedef hb_unicode_combining_class_t (*hb_unicode_combining_class_func_t) (hb_unicode_funcs_t *ufuncs,
           hb_codepoint_t unicode,
           void *user_data);
typedef unsigned int (*hb_unicode_eastasian_width_func_t) (hb_unicode_funcs_t *ufuncs,
           hb_codepoint_t unicode,
           void *user_data);
typedef hb_unicode_general_category_t (*hb_unicode_general_category_func_t) (hb_unicode_funcs_t *ufuncs,
           hb_codepoint_t unicode,
           void *user_data);
typedef hb_codepoint_t (*hb_unicode_mirroring_func_t) (hb_unicode_funcs_t *ufuncs,
           hb_codepoint_t unicode,
           void *user_data);
typedef hb_script_t (*hb_unicode_script_func_t) (hb_unicode_funcs_t *ufuncs,
           hb_codepoint_t unicode,
           void *user_data);

typedef hb_bool_t (*hb_unicode_compose_func_t) (hb_unicode_funcs_t *ufuncs,
           hb_codepoint_t a,
           hb_codepoint_t b,
           hb_codepoint_t *ab,
           void *user_data);
typedef hb_bool_t (*hb_unicode_decompose_func_t) (hb_unicode_funcs_t *ufuncs,
           hb_codepoint_t ab,
           hb_codepoint_t *a,
           hb_codepoint_t *b,
           void *user_data);
# 267 "../../../libs/harfbuzz-ng/src/hb-unicode.h"
typedef unsigned int (*hb_unicode_decompose_compatibility_func_t) (hb_unicode_funcs_t *ufuncs,
            hb_codepoint_t u,
            hb_codepoint_t *decomposed,
            void *user_data);
# 288 "../../../libs/harfbuzz-ng/src/hb-unicode.h"
void
hb_unicode_funcs_set_combining_class_func (hb_unicode_funcs_t *ufuncs,
        hb_unicode_combining_class_func_t func,
        void *user_data, hb_destroy_func_t destroy);
# 304 "../../../libs/harfbuzz-ng/src/hb-unicode.h"
void
hb_unicode_funcs_set_eastasian_width_func (hb_unicode_funcs_t *ufuncs,
        hb_unicode_eastasian_width_func_t func,
        void *user_data, hb_destroy_func_t destroy);
# 320 "../../../libs/harfbuzz-ng/src/hb-unicode.h"
void
hb_unicode_funcs_set_general_category_func (hb_unicode_funcs_t *ufuncs,
         hb_unicode_general_category_func_t func,
         void *user_data, hb_destroy_func_t destroy);
# 336 "../../../libs/harfbuzz-ng/src/hb-unicode.h"
void
hb_unicode_funcs_set_mirroring_func (hb_unicode_funcs_t *ufuncs,
         hb_unicode_mirroring_func_t func,
         void *user_data, hb_destroy_func_t destroy);
# 352 "../../../libs/harfbuzz-ng/src/hb-unicode.h"
void
hb_unicode_funcs_set_script_func (hb_unicode_funcs_t *ufuncs,
      hb_unicode_script_func_t func,
      void *user_data, hb_destroy_func_t destroy);
# 368 "../../../libs/harfbuzz-ng/src/hb-unicode.h"
void
hb_unicode_funcs_set_compose_func (hb_unicode_funcs_t *ufuncs,
       hb_unicode_compose_func_t func,
       void *user_data, hb_destroy_func_t destroy);
# 384 "../../../libs/harfbuzz-ng/src/hb-unicode.h"
void
hb_unicode_funcs_set_decompose_func (hb_unicode_funcs_t *ufuncs,
         hb_unicode_decompose_func_t func,
         void *user_data, hb_destroy_func_t destroy);
# 400 "../../../libs/harfbuzz-ng/src/hb-unicode.h"
void
hb_unicode_funcs_set_decompose_compatibility_func (hb_unicode_funcs_t *ufuncs,
         hb_unicode_decompose_compatibility_func_t func,
         void *user_data, hb_destroy_func_t destroy);



hb_unicode_combining_class_t
hb_unicode_combining_class (hb_unicode_funcs_t *ufuncs,
       hb_codepoint_t unicode);

unsigned int
hb_unicode_eastasian_width (hb_unicode_funcs_t *ufuncs,
       hb_codepoint_t unicode);

hb_unicode_general_category_t
hb_unicode_general_category (hb_unicode_funcs_t *ufuncs,
        hb_codepoint_t unicode);

hb_codepoint_t
hb_unicode_mirroring (hb_unicode_funcs_t *ufuncs,
        hb_codepoint_t unicode);

hb_script_t
hb_unicode_script (hb_unicode_funcs_t *ufuncs,
     hb_codepoint_t unicode);

hb_bool_t
hb_unicode_compose (hb_unicode_funcs_t *ufuncs,
      hb_codepoint_t a,
      hb_codepoint_t b,
      hb_codepoint_t *ab);
hb_bool_t
hb_unicode_decompose (hb_unicode_funcs_t *ufuncs,
        hb_codepoint_t ab,
        hb_codepoint_t *a,
        hb_codepoint_t *b);

unsigned int
hb_unicode_decompose_compatibility (hb_unicode_funcs_t *ufuncs,
        hb_codepoint_t u,
        hb_codepoint_t *decomposed);

}
# 39 "../../../libs/harfbuzz-ng/src/hb-buffer.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-font.h" 1
# 34 "../../../libs/harfbuzz-ng/src/hb-font.h"
# 1 "../../../libs/harfbuzz-ng/src/hb-common.h" 1
# 35 "../../../libs/harfbuzz-ng/src/hb-font.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-face.h" 1
# 34 "../../../libs/harfbuzz-ng/src/hb-face.h"
# 1 "../../../libs/harfbuzz-ng/src/hb-common.h" 1
# 35 "../../../libs/harfbuzz-ng/src/hb-face.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-blob.h" 1
# 36 "../../../libs/harfbuzz-ng/src/hb-face.h" 2

extern "C" {






typedef struct hb_face_t hb_face_t;

hb_face_t *
hb_face_create (hb_blob_t *blob,
  unsigned int index);

typedef hb_blob_t * (*hb_reference_table_func_t) (hb_face_t *face, hb_tag_t tag, void *user_data);


hb_face_t *
hb_face_create_for_tables (hb_reference_table_func_t reference_table_func,
      void *user_data,
      hb_destroy_func_t destroy);

hb_face_t *
hb_face_get_empty (void);

hb_face_t *
hb_face_reference (hb_face_t *face);

void
hb_face_destroy (hb_face_t *face);

hb_bool_t
hb_face_set_user_data (hb_face_t *face,
         hb_user_data_key_t *key,
         void * data,
         hb_destroy_func_t destroy,
         hb_bool_t replace);


void *
hb_face_get_user_data (hb_face_t *face,
         hb_user_data_key_t *key);

void
hb_face_make_immutable (hb_face_t *face);

hb_bool_t
hb_face_is_immutable (hb_face_t *face);


hb_blob_t *
hb_face_reference_table (hb_face_t *face,
    hb_tag_t tag);

hb_blob_t *
hb_face_reference_blob (hb_face_t *face);

void
hb_face_set_index (hb_face_t *face,
     unsigned int index);

unsigned int
hb_face_get_index (hb_face_t *face);

void
hb_face_set_upem (hb_face_t *face,
    unsigned int upem);

unsigned int
hb_face_get_upem (hb_face_t *face);

void
hb_face_set_glyph_count (hb_face_t *face,
    unsigned int glyph_count);

unsigned int
hb_face_get_glyph_count (hb_face_t *face);


}
# 36 "../../../libs/harfbuzz-ng/src/hb-font.h" 2

extern "C" {


typedef struct hb_font_t hb_font_t;






typedef struct hb_font_funcs_t hb_font_funcs_t;

hb_font_funcs_t *
hb_font_funcs_create (void);

hb_font_funcs_t *
hb_font_funcs_get_empty (void);

hb_font_funcs_t *
hb_font_funcs_reference (hb_font_funcs_t *ffuncs);

void
hb_font_funcs_destroy (hb_font_funcs_t *ffuncs);

hb_bool_t
hb_font_funcs_set_user_data (hb_font_funcs_t *ffuncs,
        hb_user_data_key_t *key,
        void * data,
        hb_destroy_func_t destroy,
        hb_bool_t replace);


void *
hb_font_funcs_get_user_data (hb_font_funcs_t *ffuncs,
        hb_user_data_key_t *key);


void
hb_font_funcs_make_immutable (hb_font_funcs_t *ffuncs);

hb_bool_t
hb_font_funcs_is_immutable (hb_font_funcs_t *ffuncs);




typedef struct hb_glyph_extents_t
{
  hb_position_t x_bearing;
  hb_position_t y_bearing;
  hb_position_t width;
  hb_position_t height;
} hb_glyph_extents_t;




typedef hb_bool_t (*hb_font_get_glyph_func_t) (hb_font_t *font, void *font_data,
            hb_codepoint_t unicode, hb_codepoint_t variation_selector,
            hb_codepoint_t *glyph,
            void *user_data);


typedef hb_position_t (*hb_font_get_glyph_advance_func_t) (hb_font_t *font, void *font_data,
          hb_codepoint_t glyph,
          void *user_data);
typedef hb_font_get_glyph_advance_func_t hb_font_get_glyph_h_advance_func_t;
typedef hb_font_get_glyph_advance_func_t hb_font_get_glyph_v_advance_func_t;

typedef hb_bool_t (*hb_font_get_glyph_origin_func_t) (hb_font_t *font, void *font_data,
            hb_codepoint_t glyph,
            hb_position_t *x, hb_position_t *y,
            void *user_data);
typedef hb_font_get_glyph_origin_func_t hb_font_get_glyph_h_origin_func_t;
typedef hb_font_get_glyph_origin_func_t hb_font_get_glyph_v_origin_func_t;

typedef hb_position_t (*hb_font_get_glyph_kerning_func_t) (hb_font_t *font, void *font_data,
          hb_codepoint_t first_glyph, hb_codepoint_t second_glyph,
          void *user_data);
typedef hb_font_get_glyph_kerning_func_t hb_font_get_glyph_h_kerning_func_t;
typedef hb_font_get_glyph_kerning_func_t hb_font_get_glyph_v_kerning_func_t;


typedef hb_bool_t (*hb_font_get_glyph_extents_func_t) (hb_font_t *font, void *font_data,
             hb_codepoint_t glyph,
             hb_glyph_extents_t *extents,
             void *user_data);
typedef hb_bool_t (*hb_font_get_glyph_contour_point_func_t) (hb_font_t *font, void *font_data,
            hb_codepoint_t glyph, unsigned int point_index,
            hb_position_t *x, hb_position_t *y,
            void *user_data);


typedef hb_bool_t (*hb_font_get_glyph_name_func_t) (hb_font_t *font, void *font_data,
          hb_codepoint_t glyph,
          char *name, unsigned int size,
          void *user_data);
typedef hb_bool_t (*hb_font_get_glyph_from_name_func_t) (hb_font_t *font, void *font_data,
        const char *name, int len,
        hb_codepoint_t *glyph,
        void *user_data);
# 153 "../../../libs/harfbuzz-ng/src/hb-font.h"
void
hb_font_funcs_set_glyph_func (hb_font_funcs_t *ffuncs,
         hb_font_get_glyph_func_t func,
         void *user_data, hb_destroy_func_t destroy);
# 169 "../../../libs/harfbuzz-ng/src/hb-font.h"
void
hb_font_funcs_set_glyph_h_advance_func (hb_font_funcs_t *ffuncs,
     hb_font_get_glyph_h_advance_func_t func,
     void *user_data, hb_destroy_func_t destroy);
# 185 "../../../libs/harfbuzz-ng/src/hb-font.h"
void
hb_font_funcs_set_glyph_v_advance_func (hb_font_funcs_t *ffuncs,
     hb_font_get_glyph_v_advance_func_t func,
     void *user_data, hb_destroy_func_t destroy);
# 201 "../../../libs/harfbuzz-ng/src/hb-font.h"
void
hb_font_funcs_set_glyph_h_origin_func (hb_font_funcs_t *ffuncs,
           hb_font_get_glyph_h_origin_func_t func,
           void *user_data, hb_destroy_func_t destroy);
# 217 "../../../libs/harfbuzz-ng/src/hb-font.h"
void
hb_font_funcs_set_glyph_v_origin_func (hb_font_funcs_t *ffuncs,
           hb_font_get_glyph_v_origin_func_t func,
           void *user_data, hb_destroy_func_t destroy);
# 233 "../../../libs/harfbuzz-ng/src/hb-font.h"
void
hb_font_funcs_set_glyph_h_kerning_func (hb_font_funcs_t *ffuncs,
     hb_font_get_glyph_h_kerning_func_t func,
     void *user_data, hb_destroy_func_t destroy);
# 249 "../../../libs/harfbuzz-ng/src/hb-font.h"
void
hb_font_funcs_set_glyph_v_kerning_func (hb_font_funcs_t *ffuncs,
     hb_font_get_glyph_v_kerning_func_t func,
     void *user_data, hb_destroy_func_t destroy);
# 265 "../../../libs/harfbuzz-ng/src/hb-font.h"
void
hb_font_funcs_set_glyph_extents_func (hb_font_funcs_t *ffuncs,
          hb_font_get_glyph_extents_func_t func,
          void *user_data, hb_destroy_func_t destroy);
# 281 "../../../libs/harfbuzz-ng/src/hb-font.h"
void
hb_font_funcs_set_glyph_contour_point_func (hb_font_funcs_t *ffuncs,
         hb_font_get_glyph_contour_point_func_t func,
         void *user_data, hb_destroy_func_t destroy);
# 297 "../../../libs/harfbuzz-ng/src/hb-font.h"
void
hb_font_funcs_set_glyph_name_func (hb_font_funcs_t *ffuncs,
       hb_font_get_glyph_name_func_t func,
       void *user_data, hb_destroy_func_t destroy);
# 313 "../../../libs/harfbuzz-ng/src/hb-font.h"
void
hb_font_funcs_set_glyph_from_name_func (hb_font_funcs_t *ffuncs,
     hb_font_get_glyph_from_name_func_t func,
     void *user_data, hb_destroy_func_t destroy);




hb_bool_t
hb_font_get_glyph (hb_font_t *font,
     hb_codepoint_t unicode, hb_codepoint_t variation_selector,
     hb_codepoint_t *glyph);

hb_position_t
hb_font_get_glyph_h_advance (hb_font_t *font,
        hb_codepoint_t glyph);
hb_position_t
hb_font_get_glyph_v_advance (hb_font_t *font,
        hb_codepoint_t glyph);

hb_bool_t
hb_font_get_glyph_h_origin (hb_font_t *font,
       hb_codepoint_t glyph,
       hb_position_t *x, hb_position_t *y);
hb_bool_t
hb_font_get_glyph_v_origin (hb_font_t *font,
       hb_codepoint_t glyph,
       hb_position_t *x, hb_position_t *y);

hb_position_t
hb_font_get_glyph_h_kerning (hb_font_t *font,
        hb_codepoint_t left_glyph, hb_codepoint_t right_glyph);
hb_position_t
hb_font_get_glyph_v_kerning (hb_font_t *font,
        hb_codepoint_t top_glyph, hb_codepoint_t bottom_glyph);

hb_bool_t
hb_font_get_glyph_extents (hb_font_t *font,
      hb_codepoint_t glyph,
      hb_glyph_extents_t *extents);

hb_bool_t
hb_font_get_glyph_contour_point (hb_font_t *font,
     hb_codepoint_t glyph, unsigned int point_index,
     hb_position_t *x, hb_position_t *y);

hb_bool_t
hb_font_get_glyph_name (hb_font_t *font,
   hb_codepoint_t glyph,
   char *name, unsigned int size);
hb_bool_t
hb_font_get_glyph_from_name (hb_font_t *font,
        const char *name, int len,
        hb_codepoint_t *glyph);




void
hb_font_get_glyph_advance_for_direction (hb_font_t *font,
      hb_codepoint_t glyph,
      hb_direction_t direction,
      hb_position_t *x, hb_position_t *y);
void
hb_font_get_glyph_origin_for_direction (hb_font_t *font,
     hb_codepoint_t glyph,
     hb_direction_t direction,
     hb_position_t *x, hb_position_t *y);
void
hb_font_add_glyph_origin_for_direction (hb_font_t *font,
     hb_codepoint_t glyph,
     hb_direction_t direction,
     hb_position_t *x, hb_position_t *y);
void
hb_font_subtract_glyph_origin_for_direction (hb_font_t *font,
          hb_codepoint_t glyph,
          hb_direction_t direction,
          hb_position_t *x, hb_position_t *y);

void
hb_font_get_glyph_kerning_for_direction (hb_font_t *font,
      hb_codepoint_t first_glyph, hb_codepoint_t second_glyph,
      hb_direction_t direction,
      hb_position_t *x, hb_position_t *y);

hb_bool_t
hb_font_get_glyph_extents_for_origin (hb_font_t *font,
          hb_codepoint_t glyph,
          hb_direction_t direction,
          hb_glyph_extents_t *extents);

hb_bool_t
hb_font_get_glyph_contour_point_for_origin (hb_font_t *font,
         hb_codepoint_t glyph, unsigned int point_index,
         hb_direction_t direction,
         hb_position_t *x, hb_position_t *y);


void
hb_font_glyph_to_string (hb_font_t *font,
    hb_codepoint_t glyph,
    char *s, unsigned int size);

hb_bool_t
hb_font_glyph_from_string (hb_font_t *font,
      const char *s, int len,
      hb_codepoint_t *glyph);
# 428 "../../../libs/harfbuzz-ng/src/hb-font.h"
hb_font_t *
hb_font_create (hb_face_t *face);

hb_font_t *
hb_font_create_sub_font (hb_font_t *parent);

hb_font_t *
hb_font_get_empty (void);

hb_font_t *
hb_font_reference (hb_font_t *font);

void
hb_font_destroy (hb_font_t *font);

hb_bool_t
hb_font_set_user_data (hb_font_t *font,
         hb_user_data_key_t *key,
         void * data,
         hb_destroy_func_t destroy,
         hb_bool_t replace);


void *
hb_font_get_user_data (hb_font_t *font,
         hb_user_data_key_t *key);

void
hb_font_make_immutable (hb_font_t *font);

hb_bool_t
hb_font_is_immutable (hb_font_t *font);

hb_font_t *
hb_font_get_parent (hb_font_t *font);

hb_face_t *
hb_font_get_face (hb_font_t *font);


void
hb_font_set_funcs (hb_font_t *font,
     hb_font_funcs_t *klass,
     void *font_data,
     hb_destroy_func_t destroy);


void
hb_font_set_funcs_data (hb_font_t *font,
          void *font_data,
          hb_destroy_func_t destroy);


void
hb_font_set_scale (hb_font_t *font,
     int x_scale,
     int y_scale);

void
hb_font_get_scale (hb_font_t *font,
     int *x_scale,
     int *y_scale);




void
hb_font_set_ppem (hb_font_t *font,
    unsigned int x_ppem,
    unsigned int y_ppem);

void
hb_font_get_ppem (hb_font_t *font,
    unsigned int *x_ppem,
    unsigned int *y_ppem);


}
# 40 "../../../libs/harfbuzz-ng/src/hb-buffer.h" 2

extern "C" {


typedef struct hb_glyph_info_t {
  hb_codepoint_t codepoint;
  hb_mask_t mask;
  uint32_t cluster;


  hb_var_int_t var1;
  hb_var_int_t var2;
} hb_glyph_info_t;

typedef struct hb_glyph_position_t {
  hb_position_t x_advance;
  hb_position_t y_advance;
  hb_position_t x_offset;
  hb_position_t y_offset;


  hb_var_int_t var;
} hb_glyph_position_t;


typedef struct hb_segment_properties_t {
  hb_direction_t direction;
  hb_script_t script;
  hb_language_t language;

  void *reserved1;
  void *reserved2;
} hb_segment_properties_t;







hb_bool_t
hb_segment_properties_equal (const hb_segment_properties_t *a,
        const hb_segment_properties_t *b);

unsigned int
hb_segment_properties_hash (const hb_segment_properties_t *p);







typedef struct hb_buffer_t hb_buffer_t;

hb_buffer_t *
hb_buffer_create (void);

hb_buffer_t *
hb_buffer_get_empty (void);

hb_buffer_t *
hb_buffer_reference (hb_buffer_t *buffer);

void
hb_buffer_destroy (hb_buffer_t *buffer);

hb_bool_t
hb_buffer_set_user_data (hb_buffer_t *buffer,
    hb_user_data_key_t *key,
    void * data,
    hb_destroy_func_t destroy,
    hb_bool_t replace);

void *
hb_buffer_get_user_data (hb_buffer_t *buffer,
    hb_user_data_key_t *key);


typedef enum {
  HB_BUFFER_CONTENT_TYPE_INVALID = 0,
  HB_BUFFER_CONTENT_TYPE_UNICODE,
  HB_BUFFER_CONTENT_TYPE_GLYPHS
} hb_buffer_content_type_t;

void
hb_buffer_set_content_type (hb_buffer_t *buffer,
       hb_buffer_content_type_t content_type);

hb_buffer_content_type_t
hb_buffer_get_content_type (hb_buffer_t *buffer);


void
hb_buffer_set_unicode_funcs (hb_buffer_t *buffer,
        hb_unicode_funcs_t *unicode_funcs);

hb_unicode_funcs_t *
hb_buffer_get_unicode_funcs (hb_buffer_t *buffer);

void
hb_buffer_set_direction (hb_buffer_t *buffer,
    hb_direction_t direction);

hb_direction_t
hb_buffer_get_direction (hb_buffer_t *buffer);

void
hb_buffer_set_script (hb_buffer_t *buffer,
        hb_script_t script);

hb_script_t
hb_buffer_get_script (hb_buffer_t *buffer);

void
hb_buffer_set_language (hb_buffer_t *buffer,
   hb_language_t language);


hb_language_t
hb_buffer_get_language (hb_buffer_t *buffer);

void
hb_buffer_set_segment_properties (hb_buffer_t *buffer,
      const hb_segment_properties_t *props);

void
hb_buffer_get_segment_properties (hb_buffer_t *buffer,
      hb_segment_properties_t *props);

void
hb_buffer_guess_segment_properties (hb_buffer_t *buffer);


typedef enum {
  HB_BUFFER_FLAG_DEFAULT = 0x00000000u,
  HB_BUFFER_FLAG_BOT = 0x00000001u,
  HB_BUFFER_FLAG_EOT = 0x00000002u,
  HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES = 0x00000004u
} hb_buffer_flags_t;

void
hb_buffer_set_flags (hb_buffer_t *buffer,
       hb_buffer_flags_t flags);

hb_buffer_flags_t
hb_buffer_get_flags (hb_buffer_t *buffer);







void
hb_buffer_set_replacement_codepoint (hb_buffer_t *buffer,
         hb_codepoint_t replacement);

hb_codepoint_t
hb_buffer_get_replacement_codepoint (hb_buffer_t *buffer);




void
hb_buffer_reset (hb_buffer_t *buffer);


void
hb_buffer_clear_contents (hb_buffer_t *buffer);


hb_bool_t
hb_buffer_pre_allocate (hb_buffer_t *buffer,
          unsigned int size);



hb_bool_t
hb_buffer_allocation_successful (hb_buffer_t *buffer);

void
hb_buffer_reverse (hb_buffer_t *buffer);

void
hb_buffer_reverse_clusters (hb_buffer_t *buffer);




void
hb_buffer_add (hb_buffer_t *buffer,
        hb_codepoint_t codepoint,
        unsigned int cluster);

void
hb_buffer_add_utf8 (hb_buffer_t *buffer,
      const char *text,
      int text_length,
      unsigned int item_offset,
      int item_length);

void
hb_buffer_add_utf16 (hb_buffer_t *buffer,
       const uint16_t *text,
       int text_length,
       unsigned int item_offset,
       int item_length);

void
hb_buffer_add_utf32 (hb_buffer_t *buffer,
       const uint32_t *text,
       int text_length,
       unsigned int item_offset,
       int item_length);


void
hb_buffer_add_codepoints (hb_buffer_t *buffer,
     const hb_codepoint_t *text,
     int text_length,
     unsigned int item_offset,
     int item_length);



hb_bool_t
hb_buffer_set_length (hb_buffer_t *buffer,
        unsigned int length);


unsigned int
hb_buffer_get_length (hb_buffer_t *buffer);




hb_glyph_info_t *
hb_buffer_get_glyph_infos (hb_buffer_t *buffer,
                           unsigned int *length);


hb_glyph_position_t *
hb_buffer_get_glyph_positions (hb_buffer_t *buffer,
                               unsigned int *length);





void
hb_buffer_normalize_glyphs (hb_buffer_t *buffer);






typedef enum {
  HB_BUFFER_SERIALIZE_FLAG_DEFAULT = 0x00000000u,
  HB_BUFFER_SERIALIZE_FLAG_NO_CLUSTERS = 0x00000001u,
  HB_BUFFER_SERIALIZE_FLAG_NO_POSITIONS = 0x00000002u,
  HB_BUFFER_SERIALIZE_FLAG_NO_GLYPH_NAMES = 0x00000004u
} hb_buffer_serialize_flags_t;

typedef enum {
  HB_BUFFER_SERIALIZE_FORMAT_TEXT = ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('X'))<<8)|((uint8_t)('T')))),
  HB_BUFFER_SERIALIZE_FORMAT_JSON = ((hb_tag_t)((((uint8_t)('J'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)('N')))),
  HB_BUFFER_SERIALIZE_FORMAT_INVALID = ((hb_tag_t)((((uint8_t)(0))<<24)|(((uint8_t)(0))<<16)|(((uint8_t)(0))<<8)|((uint8_t)(0))))
} hb_buffer_serialize_format_t;


hb_buffer_serialize_format_t
hb_buffer_serialize_format_from_string (const char *str, int len);

const char *
hb_buffer_serialize_format_to_string (hb_buffer_serialize_format_t format);

const char **
hb_buffer_serialize_list_formats (void);


unsigned int
hb_buffer_serialize_glyphs (hb_buffer_t *buffer,
       unsigned int start,
       unsigned int end,
       char *buf,
       unsigned int buf_size,
       unsigned int *buf_consumed,
       hb_font_t *font,
       hb_buffer_serialize_format_t format,
       hb_buffer_serialize_flags_t flags);

hb_bool_t
hb_buffer_deserialize_glyphs (hb_buffer_t *buffer,
         const char *buf,
         int buf_len,
         const char **end_ptr,
         hb_font_t *font,
         hb_buffer_serialize_format_t format);


}
# 33 "../../../libs/harfbuzz-ng/src/hb.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-common.h" 1
# 34 "../../../libs/harfbuzz-ng/src/hb.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-deprecated.h" 1
# 34 "../../../libs/harfbuzz-ng/src/hb-deprecated.h"
# 1 "../../../libs/harfbuzz-ng/src/hb-common.h" 1
# 35 "../../../libs/harfbuzz-ng/src/hb-deprecated.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-unicode.h" 1
# 36 "../../../libs/harfbuzz-ng/src/hb-deprecated.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-font.h" 1
# 37 "../../../libs/harfbuzz-ng/src/hb-deprecated.h" 2

extern "C" {
# 49 "../../../libs/harfbuzz-ng/src/hb-deprecated.h"
}
# 35 "../../../libs/harfbuzz-ng/src/hb.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-face.h" 1
# 36 "../../../libs/harfbuzz-ng/src/hb.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-font.h" 1
# 37 "../../../libs/harfbuzz-ng/src/hb.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-set.h" 1
# 34 "../../../libs/harfbuzz-ng/src/hb-set.h"
# 1 "../../../libs/harfbuzz-ng/src/hb-common.h" 1
# 35 "../../../libs/harfbuzz-ng/src/hb-set.h" 2

extern "C" {




typedef struct hb_set_t hb_set_t;


hb_set_t *
hb_set_create (void);

hb_set_t *
hb_set_get_empty (void);

hb_set_t *
hb_set_reference (hb_set_t *set);

void
hb_set_destroy (hb_set_t *set);

hb_bool_t
hb_set_set_user_data (hb_set_t *set,
        hb_user_data_key_t *key,
        void * data,
        hb_destroy_func_t destroy,
        hb_bool_t replace);

void *
hb_set_get_user_data (hb_set_t *set,
        hb_user_data_key_t *key);



hb_bool_t
hb_set_allocation_successful (const hb_set_t *set);

void
hb_set_clear (hb_set_t *set);

hb_bool_t
hb_set_is_empty (const hb_set_t *set);

hb_bool_t
hb_set_has (const hb_set_t *set,
     hb_codepoint_t codepoint);



void
hb_set_add (hb_set_t *set,
     hb_codepoint_t codepoint);

void
hb_set_add_range (hb_set_t *set,
    hb_codepoint_t first,
    hb_codepoint_t last);

void
hb_set_del (hb_set_t *set,
     hb_codepoint_t codepoint);

void
hb_set_del_range (hb_set_t *set,
    hb_codepoint_t first,
    hb_codepoint_t last);

hb_bool_t
hb_set_is_equal (const hb_set_t *set,
   const hb_set_t *other);

void
hb_set_set (hb_set_t *set,
     const hb_set_t *other);

void
hb_set_union (hb_set_t *set,
       const hb_set_t *other);

void
hb_set_intersect (hb_set_t *set,
    const hb_set_t *other);

void
hb_set_subtract (hb_set_t *set,
   const hb_set_t *other);

void
hb_set_symmetric_difference (hb_set_t *set,
        const hb_set_t *other);

void
hb_set_invert (hb_set_t *set);

unsigned int
hb_set_get_population (const hb_set_t *set);


hb_codepoint_t
hb_set_get_min (const hb_set_t *set);


hb_codepoint_t
hb_set_get_max (const hb_set_t *set);


hb_bool_t
hb_set_next (const hb_set_t *set,
      hb_codepoint_t *codepoint);


hb_bool_t
hb_set_next_range (const hb_set_t *set,
     hb_codepoint_t *first,
     hb_codepoint_t *last);


}
# 38 "../../../libs/harfbuzz-ng/src/hb.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-shape.h" 1
# 36 "../../../libs/harfbuzz-ng/src/hb-shape.h"
# 1 "../../../libs/harfbuzz-ng/src/hb-common.h" 1
# 37 "../../../libs/harfbuzz-ng/src/hb-shape.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-buffer.h" 1
# 38 "../../../libs/harfbuzz-ng/src/hb-shape.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-font.h" 1
# 39 "../../../libs/harfbuzz-ng/src/hb-shape.h" 2

extern "C" {


typedef struct hb_feature_t {
  hb_tag_t tag;
  uint32_t value;
  unsigned int start;
  unsigned int end;
} hb_feature_t;


hb_bool_t
hb_feature_from_string (const char *str, int len,
   hb_feature_t *feature);



void
hb_feature_to_string (hb_feature_t *feature,
        char *buf, unsigned int size);


void
hb_shape (hb_font_t *font,
   hb_buffer_t *buffer,
   const hb_feature_t *features,
   unsigned int num_features);

hb_bool_t
hb_shape_full (hb_font_t *font,
        hb_buffer_t *buffer,
        const hb_feature_t *features,
        unsigned int num_features,
        const char * const *shaper_list);

const char **
hb_shape_list_shapers (void);


}
# 39 "../../../libs/harfbuzz-ng/src/hb.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-shape-plan.h" 1
# 34 "../../../libs/harfbuzz-ng/src/hb-shape-plan.h"
# 1 "../../../libs/harfbuzz-ng/src/hb-common.h" 1
# 35 "../../../libs/harfbuzz-ng/src/hb-shape-plan.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-font.h" 1
# 36 "../../../libs/harfbuzz-ng/src/hb-shape-plan.h" 2

extern "C" {

typedef struct hb_shape_plan_t hb_shape_plan_t;

hb_shape_plan_t *
hb_shape_plan_create (hb_face_t *face,
        const hb_segment_properties_t *props,
        const hb_feature_t *user_features,
        unsigned int num_user_features,
        const char * const *shaper_list);

hb_shape_plan_t *
hb_shape_plan_create_cached (hb_face_t *face,
        const hb_segment_properties_t *props,
        const hb_feature_t *user_features,
        unsigned int num_user_features,
        const char * const *shaper_list);

hb_shape_plan_t *
hb_shape_plan_get_empty (void);

hb_shape_plan_t *
hb_shape_plan_reference (hb_shape_plan_t *shape_plan);

void
hb_shape_plan_destroy (hb_shape_plan_t *shape_plan);

hb_bool_t
hb_shape_plan_set_user_data (hb_shape_plan_t *shape_plan,
        hb_user_data_key_t *key,
        void * data,
        hb_destroy_func_t destroy,
        hb_bool_t replace);

void *
hb_shape_plan_get_user_data (hb_shape_plan_t *shape_plan,
        hb_user_data_key_t *key);


hb_bool_t
hb_shape_plan_execute (hb_shape_plan_t *shape_plan,
         hb_font_t *font,
         hb_buffer_t *buffer,
         const hb_feature_t *features,
         unsigned int num_features);

const char *
hb_shape_plan_get_shaper (hb_shape_plan_t *shape_plan);


}
# 40 "../../../libs/harfbuzz-ng/src/hb.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-unicode.h" 1
# 41 "../../../libs/harfbuzz-ng/src/hb.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-version.h" 1
# 34 "../../../libs/harfbuzz-ng/src/hb-version.h"
# 1 "../../../libs/harfbuzz-ng/src/hb-common.h" 1
# 35 "../../../libs/harfbuzz-ng/src/hb-version.h" 2

extern "C" {
# 50 "../../../libs/harfbuzz-ng/src/hb-version.h"
void
hb_version (unsigned int *major,
     unsigned int *minor,
     unsigned int *micro);

const char *
hb_version_string (void);

hb_bool_t
hb_version_atleast (unsigned int major,
      unsigned int minor,
      unsigned int micro);


}
# 42 "../../../libs/harfbuzz-ng/src/hb.h" 2

extern "C" {
}
# 37 "../../../libs/harfbuzz-ng/src/hb-private.hh" 2


# 1 "../../../libs/harfbuzz-ng/src/hb-ot.h" 1
# 33 "../../../libs/harfbuzz-ng/src/hb-ot.h"
# 1 "../../../libs/harfbuzz-ng/src/hb-ot-font.h" 1
# 32 "../../../libs/harfbuzz-ng/src/hb-ot-font.h"
extern "C" {


void
hb_ot_font_set_funcs (hb_font_t *font);


}
# 34 "../../../libs/harfbuzz-ng/src/hb-ot.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-ot-layout.h" 1
# 36 "../../../libs/harfbuzz-ng/src/hb-ot-layout.h"
# 1 "../../../libs/harfbuzz-ng/src/hb-ot-tag.h" 1
# 36 "../../../libs/harfbuzz-ng/src/hb-ot-tag.h"
extern "C" {





void
hb_ot_tags_from_script (hb_script_t script,
   hb_tag_t *script_tag_1,
   hb_tag_t *script_tag_2);

hb_script_t
hb_ot_tag_to_script (hb_tag_t tag);

hb_tag_t
hb_ot_tag_from_language (hb_language_t language);

hb_language_t
hb_ot_tag_to_language (hb_tag_t tag);


}
# 37 "../../../libs/harfbuzz-ng/src/hb-ot-layout.h" 2

extern "C" {
# 51 "../../../libs/harfbuzz-ng/src/hb-ot-layout.h"
hb_bool_t
hb_ot_layout_has_glyph_classes (hb_face_t *face);

typedef enum {
  HB_OT_LAYOUT_GLYPH_CLASS_UNCLASSIFIED = 0,
  HB_OT_LAYOUT_GLYPH_CLASS_BASE_GLYPH = 1,
  HB_OT_LAYOUT_GLYPH_CLASS_LIGATURE = 2,
  HB_OT_LAYOUT_GLYPH_CLASS_MARK = 3,
  HB_OT_LAYOUT_GLYPH_CLASS_COMPONENT = 4
} hb_ot_layout_glyph_class_t;

hb_ot_layout_glyph_class_t
hb_ot_layout_get_glyph_class (hb_face_t *face,
         hb_codepoint_t glyph);

void
hb_ot_layout_get_glyphs_in_class (hb_face_t *face,
      hb_ot_layout_glyph_class_t klass,
      hb_set_t *glyphs );




unsigned int
hb_ot_layout_get_attach_points (hb_face_t *face,
    hb_codepoint_t glyph,
    unsigned int start_offset,
    unsigned int *point_count ,
    unsigned int *point_array );


unsigned int
hb_ot_layout_get_ligature_carets (hb_font_t *font,
      hb_direction_t direction,
      hb_codepoint_t glyph,
      unsigned int start_offset,
      unsigned int *caret_count ,
      hb_position_t *caret_array );
# 99 "../../../libs/harfbuzz-ng/src/hb-ot-layout.h"
unsigned int
hb_ot_layout_table_get_script_tags (hb_face_t *face,
        hb_tag_t table_tag,
        unsigned int start_offset,
        unsigned int *script_count ,
        hb_tag_t *script_tags );

hb_bool_t
hb_ot_layout_table_find_script (hb_face_t *face,
    hb_tag_t table_tag,
    hb_tag_t script_tag,
    unsigned int *script_index);


hb_bool_t
hb_ot_layout_table_choose_script (hb_face_t *face,
      hb_tag_t table_tag,
      const hb_tag_t *script_tags,
      unsigned int *script_index,
      hb_tag_t *chosen_script);

unsigned int
hb_ot_layout_table_get_feature_tags (hb_face_t *face,
         hb_tag_t table_tag,
         unsigned int start_offset,
         unsigned int *feature_count ,
         hb_tag_t *feature_tags );

unsigned int
hb_ot_layout_script_get_language_tags (hb_face_t *face,
           hb_tag_t table_tag,
           unsigned int script_index,
           unsigned int start_offset,
           unsigned int *language_count ,
           hb_tag_t *language_tags );

hb_bool_t
hb_ot_layout_script_find_language (hb_face_t *face,
       hb_tag_t table_tag,
       unsigned int script_index,
       hb_tag_t language_tag,
       unsigned int *language_index);

hb_bool_t
hb_ot_layout_language_get_required_feature_index (hb_face_t *face,
        hb_tag_t table_tag,
        unsigned int script_index,
        unsigned int language_index,
        unsigned int *feature_index);

hb_bool_t
hb_ot_layout_language_get_required_feature (hb_face_t *face,
         hb_tag_t table_tag,
         unsigned int script_index,
         unsigned int language_index,
         unsigned int *feature_index,
         hb_tag_t *feature_tag);

unsigned int
hb_ot_layout_language_get_feature_indexes (hb_face_t *face,
        hb_tag_t table_tag,
        unsigned int script_index,
        unsigned int language_index,
        unsigned int start_offset,
        unsigned int *feature_count ,
        unsigned int *feature_indexes );

unsigned int
hb_ot_layout_language_get_feature_tags (hb_face_t *face,
     hb_tag_t table_tag,
     unsigned int script_index,
     unsigned int language_index,
     unsigned int start_offset,
     unsigned int *feature_count ,
     hb_tag_t *feature_tags );

hb_bool_t
hb_ot_layout_language_find_feature (hb_face_t *face,
        hb_tag_t table_tag,
        unsigned int script_index,
        unsigned int language_index,
        hb_tag_t feature_tag,
        unsigned int *feature_index);

unsigned int
hb_ot_layout_feature_get_lookups (hb_face_t *face,
      hb_tag_t table_tag,
      unsigned int feature_index,
      unsigned int start_offset,
      unsigned int *lookup_count ,
      unsigned int *lookup_indexes );

unsigned int
hb_ot_layout_table_get_lookup_count (hb_face_t *face,
         hb_tag_t table_tag);


void
hb_ot_layout_collect_lookups (hb_face_t *face,
         hb_tag_t table_tag,
         const hb_tag_t *scripts,
         const hb_tag_t *languages,
         const hb_tag_t *features,
         hb_set_t *lookup_indexes );

void
hb_ot_layout_lookup_collect_glyphs (hb_face_t *face,
        hb_tag_t table_tag,
        unsigned int lookup_index,
        hb_set_t *glyphs_before,
        hb_set_t *glyphs_input,
        hb_set_t *glyphs_after,
        hb_set_t *glyphs_output );
# 244 "../../../libs/harfbuzz-ng/src/hb-ot-layout.h"
hb_bool_t
hb_ot_layout_has_substitution (hb_face_t *face);

hb_bool_t
hb_ot_layout_lookup_would_substitute (hb_face_t *face,
          unsigned int lookup_index,
          const hb_codepoint_t *glyphs,
          unsigned int glyphs_length,
          hb_bool_t zero_context);

void
hb_ot_layout_lookup_substitute_closure (hb_face_t *face,
            unsigned int lookup_index,
            hb_set_t *glyphs
                                     );
# 277 "../../../libs/harfbuzz-ng/src/hb-ot-layout.h"
hb_bool_t
hb_ot_layout_has_positioning (hb_face_t *face);
# 291 "../../../libs/harfbuzz-ng/src/hb-ot-layout.h"
hb_bool_t
hb_ot_layout_get_size_params (hb_face_t *face,
         unsigned int *design_size,
         unsigned int *subfamily_id,
         unsigned int *subfamily_name_id,
         unsigned int *range_start,
         unsigned int *range_end );


}
# 35 "../../../libs/harfbuzz-ng/src/hb-ot.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-ot-tag.h" 1
# 36 "../../../libs/harfbuzz-ng/src/hb-ot.h" 2
# 1 "../../../libs/harfbuzz-ng/src/hb-ot-shape.h" 1
# 36 "../../../libs/harfbuzz-ng/src/hb-ot-shape.h"
extern "C" {


void
hb_ot_shape_glyphs_closure (hb_font_t *font,
       hb_buffer_t *buffer,
       const hb_feature_t *features,
       unsigned int num_features,
       hb_set_t *glyphs);

void
hb_ot_shape_plan_collect_lookups (hb_shape_plan_t *shape_plan,
      hb_tag_t table_tag,
      hb_set_t *lookup_indexes );

}
# 37 "../../../libs/harfbuzz-ng/src/hb-ot.h" 2

extern "C" {

}
# 40 "../../../libs/harfbuzz-ng/src/hb-private.hh" 2



# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 1 3 4
# 32 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
# 1 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stddef.h" 1 3 4
# 212 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stddef.h" 3 4
typedef unsigned int size_t;
# 33 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 2 3 4

extern "C" {






# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\waitflags.h" 1 3 4
# 42 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 2 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\waitstatus.h" 1 3 4
# 64 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\waitstatus.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\endian.h" 1 3 4
# 36 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\endian.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\endian.h" 1 3 4
# 37 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\endian.h" 2 3 4
# 60 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\endian.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\byteswap.h" 1 3 4
# 27 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\byteswap.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\types.h" 1 3 4
# 27 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\types.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\wordsize.h" 1 3 4
# 28 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\types.h" 2 3 4


typedef unsigned char __u_char;
typedef unsigned short int __u_short;
typedef unsigned int __u_int;
typedef unsigned long int __u_long;


typedef signed char __int8_t;
typedef unsigned char __uint8_t;
typedef signed short int __int16_t;
typedef unsigned short int __uint16_t;
typedef signed int __int32_t;
typedef unsigned int __uint32_t;




__extension__ typedef signed long long int __int64_t;
__extension__ typedef unsigned long long int __uint64_t;







__extension__ typedef long long int __quad_t;
__extension__ typedef unsigned long long int __u_quad_t;
# 121 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\types.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\typesizes.h" 1 3 4
# 122 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\types.h" 2 3 4


__extension__ typedef __u_quad_t __dev_t;
__extension__ typedef unsigned int __uid_t;
__extension__ typedef unsigned int __gid_t;
__extension__ typedef unsigned long int __ino_t;
__extension__ typedef __u_quad_t __ino64_t;
__extension__ typedef unsigned int __mode_t;
__extension__ typedef unsigned int __nlink_t;
__extension__ typedef long int __off_t;
__extension__ typedef __quad_t __off64_t;
__extension__ typedef int __pid_t;
__extension__ typedef struct { int __val[2]; } __fsid_t;
__extension__ typedef long int __clock_t;
__extension__ typedef unsigned long int __rlim_t;
__extension__ typedef __u_quad_t __rlim64_t;
__extension__ typedef unsigned int __id_t;
__extension__ typedef long int __time_t;
__extension__ typedef unsigned int __useconds_t;
__extension__ typedef long int __suseconds_t;

__extension__ typedef int __daddr_t;
__extension__ typedef int __key_t;


__extension__ typedef int __clockid_t;


__extension__ typedef void * __timer_t;


__extension__ typedef long int __blksize_t;




__extension__ typedef long int __blkcnt_t;
__extension__ typedef __quad_t __blkcnt64_t;


__extension__ typedef unsigned long int __fsblkcnt_t;
__extension__ typedef __u_quad_t __fsblkcnt64_t;


__extension__ typedef unsigned long int __fsfilcnt_t;
__extension__ typedef __u_quad_t __fsfilcnt64_t;


__extension__ typedef int __fsword_t;

__extension__ typedef int __ssize_t;


__extension__ typedef long int __syscall_slong_t;

__extension__ typedef unsigned long int __syscall_ulong_t;



typedef __off64_t __loff_t;
typedef __quad_t *__qaddr_t;
typedef char *__caddr_t;


__extension__ typedef int __intptr_t;


__extension__ typedef unsigned int __socklen_t;
# 28 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\byteswap.h" 2 3 4






# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\byteswap-16.h" 1 3 4
# 35 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\byteswap.h" 2 3 4
# 43 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\byteswap.h" 3 4
static __inline unsigned int
__bswap_32 (unsigned int __bsx)
{
  return __builtin_bswap32 (__bsx);
}
# 74 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\byteswap.h" 3 4
static __inline __uint64_t
__bswap_64 (__uint64_t __bsx)
{
  return __builtin_bswap64 (__bsx);
}
# 61 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\endian.h" 2 3 4
# 65 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\waitstatus.h" 2 3 4

union wait
  {
    int w_status;
    struct
      {

 unsigned int __w_termsig:7;
 unsigned int __w_coredump:1;
 unsigned int __w_retcode:8;
 unsigned int:16;







      } __wait_terminated;
    struct
      {

 unsigned int __w_stopval:8;
 unsigned int __w_stopsig:8;
 unsigned int:16;






      } __wait_stopped;
  };
# 43 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 2 3 4
# 95 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4


typedef struct
  {
    int quot;
    int rem;
  } div_t;



typedef struct
  {
    long int quot;
    long int rem;
  } ldiv_t;







__extension__ typedef struct
  {
    long long int quot;
    long long int rem;
  } lldiv_t;


# 139 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern size_t __ctype_get_mb_cur_max (void) throw () ;




extern double atof (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern int atoi (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;

extern long int atol (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





__extension__ extern long long int atoll (const char *__nptr)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;





extern double strtod (const char *__restrict __nptr,
        char **__restrict __endptr)
     throw () __attribute__ ((__nonnull__ (1)));





extern float strtof (const char *__restrict __nptr,
       char **__restrict __endptr) throw () __attribute__ ((__nonnull__ (1)));

extern long double strtold (const char *__restrict __nptr,
       char **__restrict __endptr)
     throw () __attribute__ ((__nonnull__ (1)));





extern long int strtol (const char *__restrict __nptr,
   char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));

extern unsigned long int strtoul (const char *__restrict __nptr,
      char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));




__extension__
extern long long int strtoq (const char *__restrict __nptr,
        char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtouq (const char *__restrict __nptr,
           char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));





__extension__
extern long long int strtoll (const char *__restrict __nptr,
         char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));

__extension__
extern unsigned long long int strtoull (const char *__restrict __nptr,
     char **__restrict __endptr, int __base)
     throw () __attribute__ ((__nonnull__ (1)));

# 235 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\xlocale.h" 1 3 4
# 27 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\xlocale.h" 3 4
typedef struct __locale_struct
{

  struct __locale_data *__locales[13];


  const unsigned short int *__ctype_b;
  const int *__ctype_tolower;
  const int *__ctype_toupper;


  const char *__names[13];
} *__locale_t;


typedef __locale_t locale_t;
# 236 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 2 3 4



extern long int strtol_l (const char *__restrict __nptr,
     char **__restrict __endptr, int __base,
     __locale_t __loc) throw () __attribute__ ((__nonnull__ (1, 4)));

extern unsigned long int strtoul_l (const char *__restrict __nptr,
        char **__restrict __endptr,
        int __base, __locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 4)));

__extension__
extern long long int strtoll_l (const char *__restrict __nptr,
    char **__restrict __endptr, int __base,
    __locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 4)));

__extension__
extern unsigned long long int strtoull_l (const char *__restrict __nptr,
       char **__restrict __endptr,
       int __base, __locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 4)));

extern double strtod_l (const char *__restrict __nptr,
   char **__restrict __endptr, __locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));

extern float strtof_l (const char *__restrict __nptr,
         char **__restrict __endptr, __locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));

extern long double strtold_l (const char *__restrict __nptr,
         char **__restrict __endptr,
         __locale_t __loc)
     throw () __attribute__ ((__nonnull__ (1, 3)));
# 305 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern char *l64a (long int __n) throw () ;


extern long int a64l (const char *__s)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1))) ;




# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\types.h" 1 3 4
# 27 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\types.h" 3 4
extern "C" {





typedef __u_char u_char;
typedef __u_short u_short;
typedef __u_int u_int;
typedef __u_long u_long;
typedef __quad_t quad_t;
typedef __u_quad_t u_quad_t;
typedef __fsid_t fsid_t;




typedef __loff_t loff_t;



typedef __ino_t ino_t;






typedef __ino64_t ino64_t;




typedef __dev_t dev_t;




typedef __gid_t gid_t;




typedef __mode_t mode_t;




typedef __nlink_t nlink_t;




typedef __uid_t uid_t;





typedef __off_t off_t;






typedef __off64_t off64_t;




typedef __pid_t pid_t;





typedef __id_t id_t;




typedef __ssize_t ssize_t;





typedef __daddr_t daddr_t;

typedef __caddr_t caddr_t;







typedef __key_t key_t;
# 135 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\types.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\time.h" 1 3 4
# 57 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\time.h" 3 4


typedef __clock_t clock_t;



# 73 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\time.h" 3 4


typedef __time_t time_t;



# 91 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\time.h" 3 4
typedef __clockid_t clockid_t;
# 103 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\time.h" 3 4
typedef __timer_t timer_t;
# 136 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\types.h" 2 3 4



typedef __useconds_t useconds_t;



typedef __suseconds_t suseconds_t;





# 1 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stddef.h" 1 3 4
# 150 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\types.h" 2 3 4



typedef unsigned long int ulong;
typedef unsigned short int ushort;
typedef unsigned int uint;
# 203 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\types.h" 3 4
typedef unsigned int u_int8_t __attribute__ ((__mode__ (__QI__)));
typedef unsigned int u_int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int u_int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int u_int64_t __attribute__ ((__mode__ (__DI__)));

typedef int register_t __attribute__ ((__mode__ (__word__)));
# 222 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\types.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\select.h" 1 3 4
# 30 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\select.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\select.h" 1 3 4
# 31 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\select.h" 2 3 4


# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\sigset.h" 1 3 4
# 22 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\sigset.h" 3 4
typedef int __sig_atomic_t;




typedef struct
  {
    unsigned long int __val[(1024 / (8 * sizeof (unsigned long int)))];
  } __sigset_t;
# 34 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\select.h" 2 3 4



typedef __sigset_t sigset_t;





# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\time.h" 1 3 4
# 120 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\time.h" 3 4
struct timespec
  {
    __time_t tv_sec;
    __syscall_slong_t tv_nsec;
  };
# 44 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\select.h" 2 3 4

# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\time.h" 1 3 4
# 30 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\time.h" 3 4
struct timeval
  {
    __time_t tv_sec;
    __suseconds_t tv_usec;
  };
# 46 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\select.h" 2 3 4
# 54 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\select.h" 3 4
typedef long int __fd_mask;
# 64 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\select.h" 3 4
typedef struct
  {



    __fd_mask fds_bits[1024 / (8 * (int) sizeof (__fd_mask))];





  } fd_set;






typedef __fd_mask fd_mask;
# 96 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\select.h" 3 4
extern "C" {
# 106 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\select.h" 3 4
extern int select (int __nfds, fd_set *__restrict __readfds,
     fd_set *__restrict __writefds,
     fd_set *__restrict __exceptfds,
     struct timeval *__restrict __timeout);
# 118 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\select.h" 3 4
extern int pselect (int __nfds, fd_set *__restrict __readfds,
      fd_set *__restrict __writefds,
      fd_set *__restrict __exceptfds,
      const struct timespec *__restrict __timeout,
      const __sigset_t *__restrict __sigmask);
# 131 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\select.h" 3 4
}
# 223 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\types.h" 2 3 4


# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\sysmacros.h" 1 3 4
# 24 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\sysmacros.h" 3 4
extern "C" {

__extension__
extern unsigned int gnu_dev_major (unsigned long long int __dev)
     throw () __attribute__ ((__const__));
__extension__
extern unsigned int gnu_dev_minor (unsigned long long int __dev)
     throw () __attribute__ ((__const__));
__extension__
extern unsigned long long int gnu_dev_makedev (unsigned int __major,
            unsigned int __minor)
     throw () __attribute__ ((__const__));
# 58 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\sysmacros.h" 3 4
}
# 226 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\types.h" 2 3 4





typedef __blksize_t blksize_t;






typedef __blkcnt_t blkcnt_t;



typedef __fsblkcnt_t fsblkcnt_t;



typedef __fsfilcnt_t fsfilcnt_t;
# 265 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\types.h" 3 4
typedef __blkcnt64_t blkcnt64_t;
typedef __fsblkcnt64_t fsblkcnt64_t;
typedef __fsfilcnt64_t fsfilcnt64_t;





# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\pthreadtypes.h" 1 3 4
# 37 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\pthreadtypes.h" 3 4
typedef unsigned long int pthread_t;


union pthread_attr_t
{
  char __size[36];
  long int __align;
};

typedef union pthread_attr_t pthread_attr_t;




typedef struct __pthread_internal_slist
{
  struct __pthread_internal_slist *__next;
} __pthread_slist_t;




typedef union
{
  struct __pthread_mutex_s
  {
    int __lock;
    unsigned int __count;
    int __owner;


    int __kind;
    unsigned int __nusers;
    __extension__ union
    {
      int __spins;
      __pthread_slist_t __list;
    };
  } __data;
  char __size[24];
  long int __align;
} pthread_mutex_t;

typedef union
{
  char __size[4];
  long int __align;
} pthread_mutexattr_t;




typedef union
{
  struct
  {
    int __lock;
    unsigned int __futex;
    __extension__ unsigned long long int __total_seq;
    __extension__ unsigned long long int __wakeup_seq;
    __extension__ unsigned long long int __woken_seq;
    void *__mutex;
    unsigned int __nwaiters;
    unsigned int __broadcast_seq;
  } __data;
  char __size[48];
  __extension__ long long int __align;
} pthread_cond_t;

typedef union
{
  char __size[4];
  long int __align;
} pthread_condattr_t;



typedef unsigned int pthread_key_t;



typedef int pthread_once_t;





typedef union
{
  struct
  {
    int __lock;
    unsigned int __nr_readers;
    unsigned int __readers_wakeup;
    unsigned int __writer_wakeup;
    unsigned int __nr_readers_queued;
    unsigned int __nr_writers_queued;
# 144 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\pthreadtypes.h" 3 4
    unsigned char __flags;
    unsigned char __shared;
    unsigned char __pad1;
    unsigned char __pad2;

    int __writer;
  } __data;
  char __size[32];
  long int __align;
} pthread_rwlock_t;

typedef union
{
  char __size[8];
  long int __align;
} pthread_rwlockattr_t;





typedef volatile int pthread_spinlock_t;




typedef union
{
  char __size[20];
  long int __align;
} pthread_barrier_t;

typedef union
{
  char __size[4];
  int __align;
} pthread_barrierattr_t;
# 274 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\sys\\types.h" 2 3 4


}
# 315 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 2 3 4






extern long int random (void) throw ();


extern void srandom (unsigned int __seed) throw ();





extern char *initstate (unsigned int __seed, char *__statebuf,
   size_t __statelen) throw () __attribute__ ((__nonnull__ (2)));



extern char *setstate (char *__statebuf) throw () __attribute__ ((__nonnull__ (1)));







struct random_data
  {
    int32_t *fptr;
    int32_t *rptr;
    int32_t *state;
    int rand_type;
    int rand_deg;
    int rand_sep;
    int32_t *end_ptr;
  };

extern int random_r (struct random_data *__restrict __buf,
       int32_t *__restrict __result) throw () __attribute__ ((__nonnull__ (1, 2)));

extern int srandom_r (unsigned int __seed, struct random_data *__buf)
     throw () __attribute__ ((__nonnull__ (2)));

extern int initstate_r (unsigned int __seed, char *__restrict __statebuf,
   size_t __statelen,
   struct random_data *__restrict __buf)
     throw () __attribute__ ((__nonnull__ (2, 4)));

extern int setstate_r (char *__restrict __statebuf,
         struct random_data *__restrict __buf)
     throw () __attribute__ ((__nonnull__ (1, 2)));






extern int rand (void) throw ();

extern void srand (unsigned int __seed) throw ();




extern int rand_r (unsigned int *__seed) throw ();







extern double drand48 (void) throw ();
extern double erand48 (unsigned short int __xsubi[3]) throw () __attribute__ ((__nonnull__ (1)));


extern long int lrand48 (void) throw ();
extern long int nrand48 (unsigned short int __xsubi[3])
     throw () __attribute__ ((__nonnull__ (1)));


extern long int mrand48 (void) throw ();
extern long int jrand48 (unsigned short int __xsubi[3])
     throw () __attribute__ ((__nonnull__ (1)));


extern void srand48 (long int __seedval) throw ();
extern unsigned short int *seed48 (unsigned short int __seed16v[3])
     throw () __attribute__ ((__nonnull__ (1)));
extern void lcong48 (unsigned short int __param[7]) throw () __attribute__ ((__nonnull__ (1)));





struct drand48_data
  {
    unsigned short int __x[3];
    unsigned short int __old_x[3];
    unsigned short int __c;
    unsigned short int __init;
    __extension__ unsigned long long int __a;

  };


extern int drand48_r (struct drand48_data *__restrict __buffer,
        double *__restrict __result) throw () __attribute__ ((__nonnull__ (1, 2)));
extern int erand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        double *__restrict __result) throw () __attribute__ ((__nonnull__ (1, 2)));


extern int lrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern int nrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern int mrand48_r (struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern int jrand48_r (unsigned short int __xsubi[3],
        struct drand48_data *__restrict __buffer,
        long int *__restrict __result)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern int srand48_r (long int __seedval, struct drand48_data *__buffer)
     throw () __attribute__ ((__nonnull__ (2)));

extern int seed48_r (unsigned short int __seed16v[3],
       struct drand48_data *__buffer) throw () __attribute__ ((__nonnull__ (1, 2)));

extern int lcong48_r (unsigned short int __param[7],
        struct drand48_data *__buffer)
     throw () __attribute__ ((__nonnull__ (1, 2)));









extern void *malloc (size_t __size) throw () __attribute__ ((__malloc__)) ;

extern void *calloc (size_t __nmemb, size_t __size)
     throw () __attribute__ ((__malloc__)) ;










extern void *realloc (void *__ptr, size_t __size)
     throw () __attribute__ ((__warn_unused_result__));

extern void free (void *__ptr) throw ();




extern void cfree (void *__ptr) throw ();



# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\alloca.h" 1 3 4
# 24 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\alloca.h" 3 4
# 1 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stddef.h" 1 3 4
# 25 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\alloca.h" 2 3 4

extern "C" {





extern void *alloca (size_t __size) throw ();





}
# 493 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 2 3 4





extern void *valloc (size_t __size) throw () __attribute__ ((__malloc__)) ;




extern int posix_memalign (void **__memptr, size_t __alignment, size_t __size)
     throw () __attribute__ ((__nonnull__ (1))) ;




extern void *aligned_alloc (size_t __alignment, size_t __size)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__alloc_size__ (2))) ;




extern void abort (void) throw () __attribute__ ((__noreturn__));



extern int atexit (void (*__func) (void)) throw () __attribute__ ((__nonnull__ (1)));




extern "C++" int at_quick_exit (void (*__func) (void))
     throw () __asm ("at_quick_exit") __attribute__ ((__nonnull__ (1)));









extern int on_exit (void (*__func) (int __status, void *__arg), void *__arg)
     throw () __attribute__ ((__nonnull__ (1)));






extern void exit (int __status) throw () __attribute__ ((__noreturn__));





extern void quick_exit (int __status) throw () __attribute__ ((__noreturn__));







extern void _Exit (int __status) throw () __attribute__ ((__noreturn__));






extern char *getenv (const char *__name) throw () __attribute__ ((__nonnull__ (1))) ;





extern char *secure_getenv (const char *__name)
     throw () __attribute__ ((__nonnull__ (1))) ;






extern int putenv (char *__string) throw () __attribute__ ((__nonnull__ (1)));





extern int setenv (const char *__name, const char *__value, int __replace)
     throw () __attribute__ ((__nonnull__ (2)));


extern int unsetenv (const char *__name) throw () __attribute__ ((__nonnull__ (1)));






extern int clearenv (void) throw ();
# 606 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern char *mktemp (char *__template) throw () __attribute__ ((__nonnull__ (1)));
# 620 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern int mkstemp (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 630 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern int mkstemp64 (char *__template) __attribute__ ((__nonnull__ (1))) ;
# 642 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern int mkstemps (char *__template, int __suffixlen) __attribute__ ((__nonnull__ (1))) ;
# 652 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern int mkstemps64 (char *__template, int __suffixlen)
     __attribute__ ((__nonnull__ (1))) ;
# 663 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern char *mkdtemp (char *__template) throw () __attribute__ ((__nonnull__ (1))) ;
# 674 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern int mkostemp (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 684 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern int mkostemp64 (char *__template, int __flags) __attribute__ ((__nonnull__ (1))) ;
# 694 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern int mkostemps (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;
# 706 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern int mkostemps64 (char *__template, int __suffixlen, int __flags)
     __attribute__ ((__nonnull__ (1))) ;









extern int system (const char *__command) ;






extern char *canonicalize_file_name (const char *__name)
     throw () __attribute__ ((__nonnull__ (1))) ;
# 734 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern char *realpath (const char *__restrict __name,
         char *__restrict __resolved) throw () ;






typedef int (*__compar_fn_t) (const void *, const void *);


typedef __compar_fn_t comparison_fn_t;



typedef int (*__compar_d_fn_t) (const void *, const void *, void *);





extern void *bsearch (const void *__key, const void *__base,
        size_t __nmemb, size_t __size, __compar_fn_t __compar)
     __attribute__ ((__nonnull__ (1, 2, 5))) ;







extern void qsort (void *__base, size_t __nmemb, size_t __size,
     __compar_fn_t __compar) __attribute__ ((__nonnull__ (1, 4)));

extern void qsort_r (void *__base, size_t __nmemb, size_t __size,
       __compar_d_fn_t __compar, void *__arg)
  __attribute__ ((__nonnull__ (1, 4)));




extern int abs (int __x) throw () __attribute__ ((__const__)) ;
extern long int labs (long int __x) throw () __attribute__ ((__const__)) ;



__extension__ extern long long int llabs (long long int __x)
     throw () __attribute__ ((__const__)) ;







extern div_t div (int __numer, int __denom)
     throw () __attribute__ ((__const__)) ;
extern ldiv_t ldiv (long int __numer, long int __denom)
     throw () __attribute__ ((__const__)) ;




__extension__ extern lldiv_t lldiv (long long int __numer,
        long long int __denom)
     throw () __attribute__ ((__const__)) ;

# 812 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern char *ecvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) throw () __attribute__ ((__nonnull__ (3, 4))) ;




extern char *fcvt (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign) throw () __attribute__ ((__nonnull__ (3, 4))) ;




extern char *gcvt (double __value, int __ndigit, char *__buf)
     throw () __attribute__ ((__nonnull__ (3))) ;




extern char *qecvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     throw () __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qfcvt (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign)
     throw () __attribute__ ((__nonnull__ (3, 4))) ;
extern char *qgcvt (long double __value, int __ndigit, char *__buf)
     throw () __attribute__ ((__nonnull__ (3))) ;




extern int ecvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) throw () __attribute__ ((__nonnull__ (3, 4, 5)));
extern int fcvt_r (double __value, int __ndigit, int *__restrict __decpt,
     int *__restrict __sign, char *__restrict __buf,
     size_t __len) throw () __attribute__ ((__nonnull__ (3, 4, 5)));

extern int qecvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     throw () __attribute__ ((__nonnull__ (3, 4, 5)));
extern int qfcvt_r (long double __value, int __ndigit,
      int *__restrict __decpt, int *__restrict __sign,
      char *__restrict __buf, size_t __len)
     throw () __attribute__ ((__nonnull__ (3, 4, 5)));






extern int mblen (const char *__s, size_t __n) throw ();


extern int mbtowc (wchar_t *__restrict __pwc,
     const char *__restrict __s, size_t __n) throw ();


extern int wctomb (char *__s, wchar_t __wchar) throw ();



extern size_t mbstowcs (wchar_t *__restrict __pwcs,
   const char *__restrict __s, size_t __n) throw ();

extern size_t wcstombs (char *__restrict __s,
   const wchar_t *__restrict __pwcs, size_t __n)
     throw ();








extern int rpmatch (const char *__response) throw () __attribute__ ((__nonnull__ (1))) ;
# 899 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
extern int getsubopt (char **__restrict __optionp,
        char *const *__restrict __tokens,
        char **__restrict __valuep)
     throw () __attribute__ ((__nonnull__ (1, 2, 3))) ;





extern void setkey (const char *__key) throw () __attribute__ ((__nonnull__ (1)));







extern int posix_openpt (int __oflag) ;







extern int grantpt (int __fd) throw ();



extern int unlockpt (int __fd) throw ();




extern char *ptsname (int __fd) throw () ;






extern int ptsname_r (int __fd, char *__buf, size_t __buflen)
     throw () __attribute__ ((__nonnull__ (2)));


extern int getpt (void);






extern int getloadavg (double __loadavg[], int __nelem)
     throw () __attribute__ ((__nonnull__ (1)));


# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\stdlib-float.h" 1 3 4
# 956 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 2 3 4
# 968 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdlib.h" 3 4
}
# 44 "../../../libs/harfbuzz-ng/src/hb-private.hh" 2
# 1 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stddef.h" 1 3 4
# 147 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stddef.h" 3 4
typedef int ptrdiff_t;
# 45 "../../../libs/harfbuzz-ng/src/hb-private.hh" 2
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 1 3 4
# 27 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4
extern "C" {




# 1 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stddef.h" 1 3 4
# 33 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 2 3 4
# 44 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4


extern void *memcpy (void *__restrict __dest, const void *__restrict __src,
       size_t __n) throw () __attribute__ ((__nonnull__ (1, 2)));


extern void *memmove (void *__dest, const void *__src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));






extern void *memccpy (void *__restrict __dest, const void *__restrict __src,
        int __c, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));





extern void *memset (void *__s, int __c, size_t __n) throw () __attribute__ ((__nonnull__ (1)));


extern int memcmp (const void *__s1, const void *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));



extern "C++"
{
extern void *memchr (void *__s, int __c, size_t __n)
      throw () __asm ("memchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const void *memchr (const void *__s, int __c, size_t __n)
      throw () __asm ("memchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 94 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4
}










extern "C++" void *rawmemchr (void *__s, int __c)
     throw () __asm ("rawmemchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern "C++" const void *rawmemchr (const void *__s, int __c)
     throw () __asm ("rawmemchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));







extern "C++" void *memrchr (void *__s, int __c, size_t __n)
      throw () __asm ("memrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern "C++" const void *memrchr (const void *__s, int __c, size_t __n)
      throw () __asm ("memrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));









extern char *strcpy (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));

extern char *strncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern char *strcat (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));

extern char *strncat (char *__restrict __dest, const char *__restrict __src,
        size_t __n) throw () __attribute__ ((__nonnull__ (1, 2)));


extern int strcmp (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern int strncmp (const char *__s1, const char *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strcoll (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));

extern size_t strxfrm (char *__restrict __dest,
         const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (2)));

# 166 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4
extern int strcoll_l (const char *__s1, const char *__s2, __locale_t __l)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern size_t strxfrm_l (char *__dest, const char *__src, size_t __n,
    __locale_t __l) throw () __attribute__ ((__nonnull__ (2, 4)));





extern char *strdup (const char *__s)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));






extern char *strndup (const char *__string, size_t __n)
     throw () __attribute__ ((__malloc__)) __attribute__ ((__nonnull__ (1)));
# 211 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4



extern "C++"
{
extern char *strchr (char *__s, int __c)
     throw () __asm ("strchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *strchr (const char *__s, int __c)
     throw () __asm ("strchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 234 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4
}






extern "C++"
{
extern char *strrchr (char *__s, int __c)
     throw () __asm ("strrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *strrchr (const char *__s, int __c)
     throw () __asm ("strrchr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 261 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4
}










extern "C++" char *strchrnul (char *__s, int __c)
     throw () __asm ("strchrnul") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern "C++" const char *strchrnul (const char *__s, int __c)
     throw () __asm ("strchrnul") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));









extern size_t strcspn (const char *__s, const char *__reject)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern size_t strspn (const char *__s, const char *__accept)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern "C++"
{
extern char *strpbrk (char *__s, const char *__accept)
     throw () __asm ("strpbrk") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern const char *strpbrk (const char *__s, const char *__accept)
     throw () __asm ("strpbrk") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 313 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4
}






extern "C++"
{
extern char *strstr (char *__haystack, const char *__needle)
     throw () __asm ("strstr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern const char *strstr (const char *__haystack, const char *__needle)
     throw () __asm ("strstr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 340 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4
}







extern char *strtok (char *__restrict __s, const char *__restrict __delim)
     throw () __attribute__ ((__nonnull__ (2)));




extern char *__strtok_r (char *__restrict __s,
    const char *__restrict __delim,
    char **__restrict __save_ptr)
     throw () __attribute__ ((__nonnull__ (2, 3)));

extern char *strtok_r (char *__restrict __s, const char *__restrict __delim,
         char **__restrict __save_ptr)
     throw () __attribute__ ((__nonnull__ (2, 3)));





extern "C++" char *strcasestr (char *__haystack, const char *__needle)
     throw () __asm ("strcasestr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
extern "C++" const char *strcasestr (const char *__haystack,
         const char *__needle)
     throw () __asm ("strcasestr") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));
# 382 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4
extern void *memmem (const void *__haystack, size_t __haystacklen,
       const void *__needle, size_t __needlelen)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 3)));



extern void *__mempcpy (void *__restrict __dest,
   const void *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern void *mempcpy (void *__restrict __dest,
        const void *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));





extern size_t strlen (const char *__s)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern size_t strnlen (const char *__string, size_t __maxlen)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));





extern char *strerror (int __errnum) throw ();

# 438 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4
extern char *strerror_r (int __errnum, char *__buf, size_t __buflen)
     throw () __attribute__ ((__nonnull__ (2))) ;





extern char *strerror_l (int __errnum, __locale_t __l) throw ();





extern void __bzero (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));



extern void bcopy (const void *__src, void *__dest, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));


extern void bzero (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));


extern int bcmp (const void *__s1, const void *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));



extern "C++"
{
extern char *index (char *__s, int __c)
     throw () __asm ("index") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *index (const char *__s, int __c)
     throw () __asm ("index") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 487 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4
}







extern "C++"
{
extern char *rindex (char *__s, int __c)
     throw () __asm ("rindex") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
extern const char *rindex (const char *__s, int __c)
     throw () __asm ("rindex") __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1)));
# 515 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4
}







extern int ffs (int __i) throw () __attribute__ ((__const__));




extern int ffsl (long int __l) throw () __attribute__ ((__const__));
__extension__ extern int ffsll (long long int __ll)
     throw () __attribute__ ((__const__));



extern int strcasecmp (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern int strncasecmp (const char *__s1, const char *__s2, size_t __n)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));





extern int strcasecmp_l (const char *__s1, const char *__s2,
    __locale_t __loc)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 3)));

extern int strncasecmp_l (const char *__s1, const char *__s2,
     size_t __n, __locale_t __loc)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2, 4)));





extern char *strsep (char **__restrict __stringp,
       const char *__restrict __delim)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern char *strsignal (int __sig) throw ();


extern char *__stpcpy (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern char *stpcpy (char *__restrict __dest, const char *__restrict __src)
     throw () __attribute__ ((__nonnull__ (1, 2)));



extern char *__stpncpy (char *__restrict __dest,
   const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));
extern char *stpncpy (char *__restrict __dest,
        const char *__restrict __src, size_t __n)
     throw () __attribute__ ((__nonnull__ (1, 2)));




extern int strverscmp (const char *__s1, const char *__s2)
     throw () __attribute__ ((__pure__)) __attribute__ ((__nonnull__ (1, 2)));


extern char *strfry (char *__string) throw () __attribute__ ((__nonnull__ (1)));


extern void *memfrob (void *__s, size_t __n) throw () __attribute__ ((__nonnull__ (1)));







extern "C++" char *basename (char *__filename)
     throw () __asm ("basename") __attribute__ ((__nonnull__ (1)));
extern "C++" const char *basename (const char *__filename)
     throw () __asm ("basename") __attribute__ ((__nonnull__ (1)));
# 644 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\string.h" 3 4
}
# 46 "../../../libs/harfbuzz-ng/src/hb-private.hh" 2
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\assert.h" 1 3 4
# 64 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\assert.h" 3 4
extern "C" {


extern void __assert_fail (const char *__assertion, const char *__file,
      unsigned int __line, const char *__function)
     throw () __attribute__ ((__noreturn__));


extern void __assert_perror_fail (int __errnum, const char *__file,
      unsigned int __line, const char *__function)
     throw () __attribute__ ((__noreturn__));




extern void __assert (const char *__assertion, const char *__file, int __line)
     throw () __attribute__ ((__noreturn__));


}
# 47 "../../../libs/harfbuzz-ng/src/hb-private.hh" 2





# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 1 3 4
# 29 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern "C" {



# 1 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stddef.h" 1 3 4
# 34 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 2 3 4
# 44 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
struct _IO_FILE;



typedef struct _IO_FILE FILE;





# 64 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
typedef struct _IO_FILE __FILE;
# 74 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 1 3 4
# 31 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\_g_config.h" 1 3 4
# 15 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\_g_config.h" 3 4
# 1 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stddef.h" 1 3 4
# 16 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\_g_config.h" 2 3 4




# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\wchar.h" 1 3 4
# 82 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\wchar.h" 3 4
typedef struct
{
  int __count;
  union
  {

    unsigned int __wch;



    char __wchb[4];
  } __value;
} __mbstate_t;
# 21 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\_g_config.h" 2 3 4
typedef struct
{
  __off_t __pos;
  __mbstate_t __state;
} _G_fpos_t;
typedef struct
{
  __off64_t __pos;
  __mbstate_t __state;
} _G_fpos64_t;
# 32 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 2 3 4
# 49 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 3 4
# 1 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stdarg.h" 1 3 4
# 40 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stdarg.h" 3 4
typedef __builtin_va_list __gnuc_va_list;
# 50 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 2 3 4
# 144 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 3 4
struct _IO_jump_t; struct _IO_FILE;
# 154 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 3 4
typedef void _IO_lock_t;





struct _IO_marker {
  struct _IO_marker *_next;
  struct _IO_FILE *_sbuf;



  int _pos;
# 177 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 3 4
};


enum __codecvt_result
{
  __codecvt_ok,
  __codecvt_partial,
  __codecvt_error,
  __codecvt_noconv
};
# 245 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 3 4
struct _IO_FILE {
  int _flags;




  char* _IO_read_ptr;
  char* _IO_read_end;
  char* _IO_read_base;
  char* _IO_write_base;
  char* _IO_write_ptr;
  char* _IO_write_end;
  char* _IO_buf_base;
  char* _IO_buf_end;

  char *_IO_save_base;
  char *_IO_backup_base;
  char *_IO_save_end;

  struct _IO_marker *_markers;

  struct _IO_FILE *_chain;

  int _fileno;



  int _flags2;

  __off_t _old_offset;



  unsigned short _cur_column;
  signed char _vtable_offset;
  char _shortbuf[1];



  _IO_lock_t *_lock;
# 293 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 3 4
  __off64_t _offset;
# 302 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 3 4
  void *__pad1;
  void *__pad2;
  void *__pad3;
  void *__pad4;
  size_t __pad5;

  int _mode;

  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];

};





struct _IO_FILE_plus;

extern struct _IO_FILE_plus _IO_2_1_stdin_;
extern struct _IO_FILE_plus _IO_2_1_stdout_;
extern struct _IO_FILE_plus _IO_2_1_stderr_;
# 338 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 3 4
typedef __ssize_t __io_read_fn (void *__cookie, char *__buf, size_t __nbytes);







typedef __ssize_t __io_write_fn (void *__cookie, const char *__buf,
     size_t __n);







typedef int __io_seek_fn (void *__cookie, __off64_t *__pos, int __w);


typedef int __io_close_fn (void *__cookie);




typedef __io_read_fn cookie_read_function_t;
typedef __io_write_fn cookie_write_function_t;
typedef __io_seek_fn cookie_seek_function_t;
typedef __io_close_fn cookie_close_function_t;


typedef struct
{
  __io_read_fn *read;
  __io_write_fn *write;
  __io_seek_fn *seek;
  __io_close_fn *close;
} _IO_cookie_io_functions_t;
typedef _IO_cookie_io_functions_t cookie_io_functions_t;

struct _IO_cookie_file;


extern void _IO_cookie_init (struct _IO_cookie_file *__cfile, int __read_write,
        void *__cookie, _IO_cookie_io_functions_t __fns);




extern "C" {


extern int __underflow (_IO_FILE *);
extern int __uflow (_IO_FILE *);
extern int __overflow (_IO_FILE *, int);
# 434 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 3 4
extern int _IO_getc (_IO_FILE *__fp);
extern int _IO_putc (int __c, _IO_FILE *__fp);
extern int _IO_feof (_IO_FILE *__fp) throw ();
extern int _IO_ferror (_IO_FILE *__fp) throw ();

extern int _IO_peekc_locked (_IO_FILE *__fp);





extern void _IO_flockfile (_IO_FILE *) throw ();
extern void _IO_funlockfile (_IO_FILE *) throw ();
extern int _IO_ftrylockfile (_IO_FILE *) throw ();
# 464 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 3 4
extern int _IO_vfscanf (_IO_FILE * __restrict, const char * __restrict,
   __gnuc_va_list, int *__restrict);
extern int _IO_vfprintf (_IO_FILE *__restrict, const char *__restrict,
    __gnuc_va_list);
extern __ssize_t _IO_padn (_IO_FILE *, int, __ssize_t);
extern size_t _IO_sgetn (_IO_FILE *, void *, size_t);

extern __off64_t _IO_seekoff (_IO_FILE *, __off64_t, int, int);
extern __off64_t _IO_seekpos (_IO_FILE *, __off64_t, int);

extern void _IO_free_backup_area (_IO_FILE *) throw ();
# 526 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\libio.h" 3 4
}
# 75 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 2 3 4




typedef __gnuc_va_list va_list;
# 108 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4


typedef _G_fpos_t fpos_t;





typedef _G_fpos64_t fpos64_t;
# 164 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\stdio_lim.h" 1 3 4
# 165 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 2 3 4



extern struct _IO_FILE *stdin;
extern struct _IO_FILE *stdout;
extern struct _IO_FILE *stderr;







extern int remove (const char *__filename) throw ();

extern int rename (const char *__old, const char *__new) throw ();




extern int renameat (int __oldfd, const char *__old, int __newfd,
       const char *__new) throw ();








extern FILE *tmpfile (void) ;
# 205 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern FILE *tmpfile64 (void) ;



extern char *tmpnam (char *__s) throw () ;





extern char *tmpnam_r (char *__s) throw () ;
# 227 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern char *tempnam (const char *__dir, const char *__pfx)
     throw () __attribute__ ((__malloc__)) ;








extern int fclose (FILE *__stream);




extern int fflush (FILE *__stream);

# 252 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern int fflush_unlocked (FILE *__stream);
# 262 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern int fcloseall (void);









extern FILE *fopen (const char *__restrict __filename,
      const char *__restrict __modes) ;




extern FILE *freopen (const char *__restrict __filename,
        const char *__restrict __modes,
        FILE *__restrict __stream) ;
# 295 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4


extern FILE *fopen64 (const char *__restrict __filename,
        const char *__restrict __modes) ;
extern FILE *freopen64 (const char *__restrict __filename,
   const char *__restrict __modes,
   FILE *__restrict __stream) ;




extern FILE *fdopen (int __fd, const char *__modes) throw () ;





extern FILE *fopencookie (void *__restrict __magic_cookie,
     const char *__restrict __modes,
     _IO_cookie_io_functions_t __io_funcs) throw () ;




extern FILE *fmemopen (void *__s, size_t __len, const char *__modes)
  throw () ;




extern FILE *open_memstream (char **__bufloc, size_t *__sizeloc) throw () ;






extern void setbuf (FILE *__restrict __stream, char *__restrict __buf) throw ();



extern int setvbuf (FILE *__restrict __stream, char *__restrict __buf,
      int __modes, size_t __n) throw ();





extern void setbuffer (FILE *__restrict __stream, char *__restrict __buf,
         size_t __size) throw ();


extern void setlinebuf (FILE *__stream) throw ();








extern int fprintf (FILE *__restrict __stream,
      const char *__restrict __format, ...);




extern int printf (const char *__restrict __format, ...);

extern int sprintf (char *__restrict __s,
      const char *__restrict __format, ...) throw ();





extern int vfprintf (FILE *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg);




extern int vprintf (const char *__restrict __format, __gnuc_va_list __arg);

extern int vsprintf (char *__restrict __s, const char *__restrict __format,
       __gnuc_va_list __arg) throw ();





extern int snprintf (char *__restrict __s, size_t __maxlen,
       const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 3, 4)));

extern int vsnprintf (char *__restrict __s, size_t __maxlen,
        const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 3, 0)));






extern int vasprintf (char **__restrict __ptr, const char *__restrict __f,
        __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__printf__, 2, 0))) ;
extern int __asprintf (char **__restrict __ptr,
         const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;
extern int asprintf (char **__restrict __ptr,
       const char *__restrict __fmt, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3))) ;




extern int vdprintf (int __fd, const char *__restrict __fmt,
       __gnuc_va_list __arg)
     __attribute__ ((__format__ (__printf__, 2, 0)));
extern int dprintf (int __fd, const char *__restrict __fmt, ...)
     __attribute__ ((__format__ (__printf__, 2, 3)));








extern int fscanf (FILE *__restrict __stream,
     const char *__restrict __format, ...) ;




extern int scanf (const char *__restrict __format, ...) ;

extern int sscanf (const char *__restrict __s,
     const char *__restrict __format, ...) throw ();
# 463 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4








extern int vfscanf (FILE *__restrict __s, const char *__restrict __format,
      __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 2, 0))) ;





extern int vscanf (const char *__restrict __format, __gnuc_va_list __arg)
     __attribute__ ((__format__ (__scanf__, 1, 0))) ;


extern int vsscanf (const char *__restrict __s,
      const char *__restrict __format, __gnuc_va_list __arg)
     throw () __attribute__ ((__format__ (__scanf__, 2, 0)));
# 522 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4









extern int fgetc (FILE *__stream);
extern int getc (FILE *__stream);





extern int getchar (void);

# 550 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern int getc_unlocked (FILE *__stream);
extern int getchar_unlocked (void);
# 561 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern int fgetc_unlocked (FILE *__stream);











extern int fputc (int __c, FILE *__stream);
extern int putc (int __c, FILE *__stream);





extern int putchar (int __c);

# 594 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern int fputc_unlocked (int __c, FILE *__stream);







extern int putc_unlocked (int __c, FILE *__stream);
extern int putchar_unlocked (int __c);






extern int getw (FILE *__stream);


extern int putw (int __w, FILE *__stream);








extern char *fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
     ;
# 638 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern char *gets (char *__s) __attribute__ ((__deprecated__));


# 649 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern char *fgets_unlocked (char *__restrict __s, int __n,
        FILE *__restrict __stream) ;
# 665 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern __ssize_t __getdelim (char **__restrict __lineptr,
          size_t *__restrict __n, int __delimiter,
          FILE *__restrict __stream) ;
extern __ssize_t getdelim (char **__restrict __lineptr,
        size_t *__restrict __n, int __delimiter,
        FILE *__restrict __stream) ;







extern __ssize_t getline (char **__restrict __lineptr,
       size_t *__restrict __n,
       FILE *__restrict __stream) ;








extern int fputs (const char *__restrict __s, FILE *__restrict __stream);





extern int puts (const char *__s);






extern int ungetc (int __c, FILE *__stream);






extern size_t fread (void *__restrict __ptr, size_t __size,
       size_t __n, FILE *__restrict __stream) ;




extern size_t fwrite (const void *__restrict __ptr, size_t __size,
        size_t __n, FILE *__restrict __s);

# 726 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern int fputs_unlocked (const char *__restrict __s,
      FILE *__restrict __stream);
# 737 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern size_t fread_unlocked (void *__restrict __ptr, size_t __size,
         size_t __n, FILE *__restrict __stream) ;
extern size_t fwrite_unlocked (const void *__restrict __ptr, size_t __size,
          size_t __n, FILE *__restrict __stream);








extern int fseek (FILE *__stream, long int __off, int __whence);




extern long int ftell (FILE *__stream) ;




extern void rewind (FILE *__stream);

# 773 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern int fseeko (FILE *__stream, __off_t __off, int __whence);




extern __off_t ftello (FILE *__stream) ;
# 792 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4






extern int fgetpos (FILE *__restrict __stream, fpos_t *__restrict __pos);




extern int fsetpos (FILE *__stream, const fpos_t *__pos);
# 815 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4



extern int fseeko64 (FILE *__stream, __off64_t __off, int __whence);
extern __off64_t ftello64 (FILE *__stream) ;
extern int fgetpos64 (FILE *__restrict __stream, fpos64_t *__restrict __pos);
extern int fsetpos64 (FILE *__stream, const fpos64_t *__pos);




extern void clearerr (FILE *__stream) throw ();

extern int feof (FILE *__stream) throw () ;

extern int ferror (FILE *__stream) throw () ;




extern void clearerr_unlocked (FILE *__stream) throw ();
extern int feof_unlocked (FILE *__stream) throw () ;
extern int ferror_unlocked (FILE *__stream) throw () ;








extern void perror (const char *__s);






# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\sys_errlist.h" 1 3 4
# 26 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\sys_errlist.h" 3 4
extern int sys_nerr;
extern const char *const sys_errlist[];


extern int _sys_nerr;
extern const char *const _sys_errlist[];
# 854 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 2 3 4




extern int fileno (FILE *__stream) throw () ;




extern int fileno_unlocked (FILE *__stream) throw () ;
# 873 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
extern FILE *popen (const char *__command, const char *__modes) ;





extern int pclose (FILE *__stream);





extern char *ctermid (char *__s) throw ();





extern char *cuserid (char *__s);




struct obstack;


extern int obstack_printf (struct obstack *__restrict __obstack,
      const char *__restrict __format, ...)
     throw () __attribute__ ((__format__ (__printf__, 2, 3)));
extern int obstack_vprintf (struct obstack *__restrict __obstack,
       const char *__restrict __format,
       __gnuc_va_list __args)
     throw () __attribute__ ((__format__ (__printf__, 2, 0)));







extern void flockfile (FILE *__stream) throw ();



extern int ftrylockfile (FILE *__stream) throw () ;


extern void funlockfile (FILE *__stream) throw ();
# 943 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\stdio.h" 3 4
}
# 53 "../../../libs/harfbuzz-ng/src/hb-private.hh" 2
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\errno.h" 1 3 4
# 31 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\errno.h" 3 4
extern "C" {



# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\errno.h" 1 3 4
# 24 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\errno.h" 3 4
# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\linux\\errno.h" 1 3 4



# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\asm\\errno.h" 1 3 4



# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\asm-generic\\errno.h" 1 3 4



# 1 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\asm-generic\\errno-base.h" 1 3 4
# 5 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\asm-generic\\errno.h" 2 3 4
# 5 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\asm\\errno.h" 2 3 4
# 5 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\linux\\errno.h" 2 3 4
# 25 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\errno.h" 2 3 4
# 50 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\bits\\errno.h" 3 4
extern int *__errno_location (void) throw () __attribute__ ((__const__));
# 36 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\errno.h" 2 3 4
# 54 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\errno.h" 3 4
extern char *program_invocation_name, *program_invocation_short_name;



}
# 68 "d:\\devtools\\linaro\\arm-linux-gnueabihf\\libc\\usr\\include\\errno.h" 3 4
typedef int error_t;
# 54 "../../../libs/harfbuzz-ng/src/hb-private.hh" 2
# 1 "d:\\devtools\\linaro\\lib\\gcc\\arm-linux-gnueabihf\\4.8.3\\include\\stdarg.h" 1 3 4
# 55 "../../../libs/harfbuzz-ng/src/hb-private.hh" 2
# 181 "../../../libs/harfbuzz-ng/src/hb-private.hh"
template <typename Type>
static inline Type MIN (const Type &a, const Type &b) { return a < b ? a : b; }


template <typename Type>
static inline Type MAX (const Type &a, const Type &b) { return a > b ? a : b; }

static inline unsigned int DIV_CEIL (const unsigned int a, unsigned int b)
{ return (a + (b - 1)) / b; }



template <typename Type, unsigned int n>
static inline unsigned int ARRAY_LENGTH (const Type (&)[n]) { return n; }
# 213 "../../../libs/harfbuzz-ng/src/hb-private.hh"
__attribute__((unused)) typedef int _static_assert_on_line_213_failed[(((sizeof (int8_t) == 1)))?1:-1];
__attribute__((unused)) typedef int _static_assert_on_line_214_failed[(((sizeof (uint8_t) == 1)))?1:-1];
__attribute__((unused)) typedef int _static_assert_on_line_215_failed[(((sizeof (int16_t) == 2)))?1:-1];
__attribute__((unused)) typedef int _static_assert_on_line_216_failed[(((sizeof (uint16_t) == 2)))?1:-1];
__attribute__((unused)) typedef int _static_assert_on_line_217_failed[(((sizeof (int32_t) == 4)))?1:-1];
__attribute__((unused)) typedef int _static_assert_on_line_218_failed[(((sizeof (uint32_t) == 4)))?1:-1];
__attribute__((unused)) typedef int _static_assert_on_line_219_failed[(((sizeof (int64_t) == 8)))?1:-1];
__attribute__((unused)) typedef int _static_assert_on_line_220_failed[(((sizeof (uint64_t) == 8)))?1:-1];

__attribute__((unused)) typedef int _static_assert_on_line_222_failed[(((sizeof (hb_codepoint_t) == 4)))?1:-1];
__attribute__((unused)) typedef int _static_assert_on_line_223_failed[(((sizeof (hb_position_t) == 4)))?1:-1];
__attribute__((unused)) typedef int _static_assert_on_line_224_failed[(((sizeof (hb_mask_t) == 4)))?1:-1];
__attribute__((unused)) typedef int _static_assert_on_line_225_failed[(((sizeof (hb_var_int_t) == 4)))?1:-1];
# 258 "../../../libs/harfbuzz-ng/src/hb-private.hh"
struct _hb_void_t {};
typedef const _hb_void_t &hb_void_t;



static inline __attribute__((const)) unsigned int
_hb_popcount32 (uint32_t mask)
{

  return __builtin_popcount (mask);







}


static inline __attribute__((const)) unsigned int
_hb_bit_storage (unsigned int number)
{



  unsigned int n_bits = 0;
  while (number) {
    n_bits++;
    number >>= 1;
  }
  return n_bits;

}


static inline __attribute__((const)) unsigned int
_hb_ctz (unsigned int number)
{



  unsigned int n_bits = 0;
  if ((!number)) return 0;
  while (!(number & 1)) {
    n_bits++;
    number >>= 1;
  }
  return n_bits;

}

static inline bool
_hb_unsigned_int_mul_overflows (unsigned int count, unsigned int size)
{
  return (size > 0) && (count >= ((unsigned int) -1) / size);
}



typedef int (*hb_compare_func_t) (const void *, const void *);
# 327 "../../../libs/harfbuzz-ng/src/hb-private.hh"
template <typename Type, unsigned int StaticSize=16>
struct hb_prealloced_array_t
{
  unsigned int len;
  unsigned int allocated;
  Type *array;
  Type static_array[StaticSize];

  void init (void) { memset (this, 0, sizeof (*this)); }

  inline Type& operator [] (unsigned int i) { return array[i]; }
  inline const Type& operator [] (unsigned int i) const { return array[i]; }

  inline Type *push (void)
  {
    if (!array) {
      array = static_array;
      allocated = ARRAY_LENGTH (static_array);
    }
    if ((len < allocated))
      return &array[len++];


    unsigned int new_allocated = allocated + (allocated >> 1) + 8;
    Type *new_array = __null;

    if (array == static_array) {
      new_array = (Type *) calloc (new_allocated, sizeof (Type));
      if (new_array)
        memcpy (new_array, array, len * sizeof (Type));
    } else {
      bool overflows = (new_allocated < allocated) || _hb_unsigned_int_mul_overflows (new_allocated, sizeof (Type));
      if ((!overflows)) {
 new_array = (Type *) realloc (array, new_allocated * sizeof (Type));
      }
    }

    if ((!new_array))
      return __null;

    array = new_array;
    allocated = new_allocated;
    return &array[len++];
  }

  inline void pop (void)
  {
    len--;
  }

  inline void remove (unsigned int i)
  {
     if ((i >= len))
       return;
     memmove (static_cast<void *> (&array[i]),
       static_cast<void *> (&array[i + 1]),
       (len - i - 1) * sizeof (Type));
     len--;
  }

  inline void shrink (unsigned int l)
  {
     if (l < len)
       len = l;
  }

  template <typename T>
  inline Type *find (T v) {
    for (unsigned int i = 0; i < len; i++)
      if (array[i] == v)
 return &array[i];
    return __null;
  }
  template <typename T>
  inline const Type *find (T v) const {
    for (unsigned int i = 0; i < len; i++)
      if (array[i] == v)
 return &array[i];
    return __null;
  }

  inline void qsort (void)
  {
    ::qsort (array, len, sizeof (Type), (hb_compare_func_t) Type::cmp);
  }

  inline void qsort (unsigned int start, unsigned int end)
  {
    ::qsort (array + start, end - start, sizeof (Type), (hb_compare_func_t) Type::cmp);
  }

  template <typename T>
  inline Type *bsearch (T *key)
  {
    return (Type *) ::bsearch (key, array, len, sizeof (Type), (hb_compare_func_t) Type::cmp);
  }
  template <typename T>
  inline const Type *bsearch (T *key) const
  {
    return (const Type *) ::bsearch (key, array, len, sizeof (Type), (hb_compare_func_t) Type::cmp);
  }

  inline void finish (void)
  {
    if (array != static_array)
      free (array);
    array = __null;
    allocated = len = 0;
  }
};

template <typename Type>
struct hb_auto_array_t : hb_prealloced_array_t <Type>
{
  hb_auto_array_t (void) { hb_prealloced_array_t<Type>::init (); }
  ~hb_auto_array_t (void) { hb_prealloced_array_t<Type>::finish (); }
};



template <typename item_t, typename lock_t>
struct hb_lockable_set_t
{
  hb_prealloced_array_t <item_t, 2> items;

  inline void init (void) { items.init (); }

  template <typename T>
  inline item_t *replace_or_insert (T v, lock_t &l, bool replace)
  {
    l.lock ();
    item_t *item = items.find (v);
    if (item) {
      if (replace) {
 item_t old = *item;
 *item = v;
 l.unlock ();
 old.finish ();
      }
      else {
        item = __null;
 l.unlock ();
      }
    } else {
      item = items.push ();
      if ((item))
 *item = v;
      l.unlock ();
    }
    return item;
  }

  template <typename T>
  inline void remove (T v, lock_t &l)
  {
    l.lock ();
    item_t *item = items.find (v);
    if (item) {
      item_t old = *item;
      *item = items[items.len - 1];
      items.pop ();
      l.unlock ();
      old.finish ();
    } else {
      l.unlock ();
    }
  }

  template <typename T>
  inline bool find (T v, item_t *i, lock_t &l)
  {
    l.lock ();
    item_t *item = items.find (v);
    if (item)
      *i = *item;
    l.unlock ();
    return !!item;
  }

  template <typename T>
  inline item_t *find_or_insert (T v, lock_t &l)
  {
    l.lock ();
    item_t *item = items.find (v);
    if (!item) {
      item = items.push ();
      if ((item))
        *item = v;
    }
    l.unlock ();
    return item;
  }

  inline void finish (lock_t &l)
  {
    if (!items.len) {

      items.finish ();
      return;
    }
    l.lock ();
    while (items.len) {
      item_t old = items[items.len - 1];
 items.pop ();
 l.unlock ();
 old.finish ();
 l.lock ();
    }
    items.finish ();
    l.unlock ();
  }

};




static inline bool ISALPHA (unsigned char c)
{ return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z'); }
static inline bool ISALNUM (unsigned char c)
{ return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9'); }
static inline bool ISSPACE (unsigned char c)
{ return c == ' ' || c =='\f'|| c =='\n'|| c =='\r'|| c =='\t'|| c =='\v'; }
static inline unsigned char TOUPPER (unsigned char c)
{ return (c >= 'a' && c <= 'z') ? c - 'a' + 'A' : c; }
static inline unsigned char TOLOWER (unsigned char c)
{ return (c >= 'A' && c <= 'Z') ? c - 'A' + 'a' : c; }
# 576 "../../../libs/harfbuzz-ng/src/hb-private.hh"
static inline bool
_hb_debug (unsigned int level,
    unsigned int max_level)
{
  return level < max_level;
}




template <int max_level> static inline void
_hb_debug_msg_va (const char *what,
    const void *obj,
    const char *func,
    bool indented,
    unsigned int level,
    int level_dir,
    const char *message,
    va_list ap) __attribute__((__format__ (__printf__, 7, 0)));
template <int max_level> static inline void
_hb_debug_msg_va (const char *what,
    const void *obj,
    const char *func,
    bool indented,
    unsigned int level,
    int level_dir,
    const char *message,
    va_list ap)
{
  if (!_hb_debug (level, max_level))
    return;

  fprintf (stderr, "%-10s", what ? what : "");

  if (obj)
    fprintf (stderr, "(%0*lx) ", (unsigned int) (2 * sizeof (void *)), (unsigned long) obj);
  else
    fprintf (stderr, " %*s  ", (unsigned int) (2 * sizeof (void *)), "");

  if (indented) {







    static const char bars[] = "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202" "\342\224\202";
    fprintf (stderr, "%2u %s" "\342\224\234" "%s",
      level,
      bars + sizeof (bars) - 1 - MIN ((unsigned int) sizeof (bars), (unsigned int) (sizeof ("\342\224\202") - 1) * level),
      level_dir ? (level_dir > 0 ? "\342\225\256" : "\342\225\257") : "\342\225\264");
  } else
    fprintf (stderr, "   " "\342\224\234" "\342\225\264");

  if (func)
  {
    unsigned int func_len = strlen (func);


    if (0 == strncmp (func, "typename ", 9))
      func += 9;

    const char *space = strchr (func, ' ');
    if (space)
      func = space + 1;

    const char *paren = strchr (func, '(');
    if (paren)
      func_len = paren - func;

    fprintf (stderr, "%.*s: ", func_len, func);
  }

  if (message)
    vfprintf (stderr, message, ap);

  fprintf (stderr, "\n");
}
template <> inline void
_hb_debug_msg_va<0> (const char *what __attribute__((unused)),
       const void *obj __attribute__((unused)),
       const char *func __attribute__((unused)),
       bool indented __attribute__((unused)),
       unsigned int level __attribute__((unused)),
       int level_dir __attribute__((unused)),
       const char *message __attribute__((unused)),
       va_list ap __attribute__((unused))) {}

template <int max_level> static inline void
_hb_debug_msg (const char *what,
        const void *obj,
        const char *func,
        bool indented,
        unsigned int level,
        int level_dir,
        const char *message,
        ...) __attribute__((__format__ (__printf__, 7, 8)));
template <int max_level> static inline void
_hb_debug_msg (const char *what,
        const void *obj,
        const char *func,
        bool indented,
        unsigned int level,
        int level_dir,
        const char *message,
        ...)
{
  va_list ap;
  __builtin_va_start(ap,message);
  _hb_debug_msg_va<max_level> (what, obj, func, indented, level, level_dir, message, ap);
  __builtin_va_end(ap);
}
template <> inline void
_hb_debug_msg<0> (const char *what __attribute__((unused)),
    const void *obj __attribute__((unused)),
    const char *func __attribute__((unused)),
    bool indented __attribute__((unused)),
    unsigned int level __attribute__((unused)),
    int level_dir __attribute__((unused)),
    const char *message __attribute__((unused)),
    ...) __attribute__((__format__ (__printf__, 7, 8)));
template <> inline void
_hb_debug_msg<0> (const char *what __attribute__((unused)),
    const void *obj __attribute__((unused)),
    const char *func __attribute__((unused)),
    bool indented __attribute__((unused)),
    unsigned int level __attribute__((unused)),
    int level_dir __attribute__((unused)),
    const char *message __attribute__((unused)),
    ...) {}
# 717 "../../../libs/harfbuzz-ng/src/hb-private.hh"
template <typename T>
struct hb_printer_t {
  const char *print (const T&) { return "something"; }
};

template <>
struct hb_printer_t<bool> {
  const char *print (bool v) { return v ? "true" : "false"; }
};

template <>
struct hb_printer_t<hb_void_t> {
  const char *print (hb_void_t) { return ""; }
};






template <typename T>
static inline void _hb_warn_no_return (bool returned)
{
  if ((!returned)) {
    fprintf (stderr, "OUCH, returned with no call to TRACE_RETURN.  This is a bug, please report.\n");
  }
}
template <>
           inline void _hb_warn_no_return<hb_void_t> (bool returned __attribute__((unused)))
{}

template <int max_level, typename ret_t>
struct hb_auto_trace_t {
  explicit inline hb_auto_trace_t (unsigned int *plevel_,
       const char *what_,
       const void *obj_,
       const char *func,
       const char *message,
       ...) : plevel (plevel_), what (what_), obj (obj_), returned (false)
  {
    if (plevel) ++*plevel;

    va_list ap;
    __builtin_va_start(ap,message);
    _hb_debug_msg_va<max_level> (what, obj, func, true, plevel ? *plevel : 0, +1, message, ap);
    __builtin_va_end(ap);
  }
  inline ~hb_auto_trace_t (void)
  {
    _hb_warn_no_return<ret_t> (returned);
    if (!returned) {
      _hb_debug_msg<max_level> (what, obj, __null, true, plevel ? *plevel : 1, -1, " ");
    }
    if (plevel) --*plevel;
  }

  inline ret_t ret (ret_t v, unsigned int line = 0)
  {
    if ((returned)) {
      fprintf (stderr, "OUCH, double calls to TRACE_RETURN.  This is a bug, please report.\n");
      return v;
    }

    _hb_debug_msg<max_level> (what, obj, __null, true, plevel ? *plevel : 1, -1,
         "return %s (line %d)",
         hb_printer_t<ret_t>().print (v), line);
    if (plevel) --*plevel;
    plevel = __null;
    returned = true;
    return v;
  }

  private:
  unsigned int *plevel;
  const char *what;
  const void *obj;
  bool returned;
};
template <typename ret_t>
struct hb_auto_trace_t<0, ret_t> {
  explicit inline hb_auto_trace_t (unsigned int *plevel_ __attribute__((unused)),
       const char *what __attribute__((unused)),
       const void *obj __attribute__((unused)),
       const char *func __attribute__((unused)),
       const char *message __attribute__((unused)),
       ...) {}

  inline ret_t ret (ret_t v, unsigned int line __attribute__((unused)) = 0) { return v; }
};





template <typename T> class hb_assert_unsigned_t;
template <> class hb_assert_unsigned_t<unsigned char> {};
template <> class hb_assert_unsigned_t<unsigned short> {};
template <> class hb_assert_unsigned_t<unsigned int> {};
template <> class hb_assert_unsigned_t<unsigned long> {};

template <typename T> static inline bool
hb_in_range (T u, T lo, T hi)
{





  __attribute__((unused)) typedef int _static_assert_on_line_825_failed[(((sizeof (hb_assert_unsigned_t<T>) >= 0)))?1:-1];



  return (T)(u - lo) <= (T)(hi - lo);
}

template <typename T> static inline bool
hb_in_ranges (T u, T lo1, T hi1, T lo2, T hi2)
{
  return hb_in_range (u, lo1, hi1) || hb_in_range (u, lo2, hi2);
}

template <typename T> static inline bool
hb_in_ranges (T u, T lo1, T hi1, T lo2, T hi2, T lo3, T hi3)
{
  return hb_in_range (u, lo1, hi1) || hb_in_range (u, lo2, hi2) || hb_in_range (u, lo3, hi3);
}
# 853 "../../../libs/harfbuzz-ng/src/hb-private.hh"
template <typename T, typename T2> static inline void
hb_bubble_sort (T *array, unsigned int len, int(*compar)(const T *, const T *), T2 *array2)
{
  if ((!len))
    return;

  unsigned int k = len - 1;
  do {
    unsigned int new_k = 0;

    for (unsigned int j = 0; j < k; j++)
      if (compar (&array[j], &array[j+1]) > 0)
      {
        {
   T t;
   t = array[j];
   array[j] = array[j + 1];
   array[j + 1] = t;
 }
        if (array2)
        {
   T2 t;
   t = array2[j];
   array2[j] = array2[j + 1];
   array2[j + 1] = t;
 }

 new_k = j;
      }
    k = new_k;
  } while (k);
}

template <typename T> static inline void
hb_bubble_sort (T *array, unsigned int len, int(*compar)(const T *, const T *))
{
  hb_bubble_sort (array, len, compar, (int *) __null);
}

static inline hb_bool_t
hb_codepoint_parse (const char *s, unsigned int len, int base, hb_codepoint_t *out)
{

  char buf[64];
  len = MIN (ARRAY_LENGTH (buf) - 1, len);
  strncpy (buf, s, len);
  buf[len] = '\0';

  char *end;
  (*__errno_location ()) = 0;
  unsigned long v = strtoul (buf, &end, base);
  if ((*__errno_location ())) return false;
  if (*end) return false;
  *out = v;
  return true;
}




struct hb_options_t
{
  unsigned int initialized : 1;
  unsigned int uniscribe_bug_compatible : 1;
};

union hb_options_union_t {
  unsigned int i;
  hb_options_t opts;
};
__attribute__((unused)) typedef int _static_assert_on_line_923_failed[(((sizeof (int) == sizeof (hb_options_union_t))))?1:-1];

__attribute__((__visibility__("hidden"))) void
_hb_options_init (void);

extern __attribute__((__visibility__("hidden"))) hb_options_union_t _hb_options;

static inline hb_options_t
hb_options (void)
{
  if ((!_hb_options.i))
    _hb_options_init ();

  return _hb_options.opts;
}
# 30 "../../../libs/harfbuzz-ng/src/hb-ot-tag.cc" 2







static hb_tag_t
hb_ot_old_tag_from_script (hb_script_t script)
{


  switch ((hb_tag_t) script) {
    case HB_SCRIPT_INVALID: return ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('F'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)('T'))));


    case HB_SCRIPT_HIRAGANA: return ((hb_tag_t)((((uint8_t)('k'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('n'))<<8)|((uint8_t)('a'))));


    case HB_SCRIPT_LAO: return ((hb_tag_t)((((uint8_t)('l'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('o'))<<8)|((uint8_t)(' '))));
    case HB_SCRIPT_YI: return ((hb_tag_t)((((uint8_t)('y'))<<24)|(((uint8_t)('i'))<<16)|(((uint8_t)(' '))<<8)|((uint8_t)(' '))));

    case HB_SCRIPT_NKO: return ((hb_tag_t)((((uint8_t)('n'))<<24)|(((uint8_t)('k'))<<16)|(((uint8_t)('o'))<<8)|((uint8_t)(' '))));

    case HB_SCRIPT_VAI: return ((hb_tag_t)((((uint8_t)('v'))<<24)|(((uint8_t)('a'))<<16)|(((uint8_t)('i'))<<8)|((uint8_t)(' '))));


  }


  return ((hb_tag_t) script) | 0x20000000u;
}

static hb_script_t
hb_ot_old_tag_to_script (hb_tag_t tag)
{
  if ((tag == ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('F'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)('T'))))))
    return HB_SCRIPT_INVALID;





  if (((tag & 0x0000FF00u) == 0x00002000u))
    tag |= (tag >> 8) & 0x0000FF00u;
  if (((tag & 0x000000FFu) == 0x00000020u))
    tag |= (tag >> 8) & 0x000000FFu;


  return (hb_script_t) (tag & ~0x20000000u);
}

static hb_tag_t
hb_ot_new_tag_from_script (hb_script_t script)
{
  switch ((hb_tag_t) script) {
    case HB_SCRIPT_BENGALI: return ((hb_tag_t)((((uint8_t)('b'))<<24)|(((uint8_t)('n'))<<16)|(((uint8_t)('g'))<<8)|((uint8_t)('2'))));
    case HB_SCRIPT_DEVANAGARI: return ((hb_tag_t)((((uint8_t)('d'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('v'))<<8)|((uint8_t)('2'))));
    case HB_SCRIPT_GUJARATI: return ((hb_tag_t)((((uint8_t)('g'))<<24)|(((uint8_t)('j'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('2'))));
    case HB_SCRIPT_GURMUKHI: return ((hb_tag_t)((((uint8_t)('g'))<<24)|(((uint8_t)('u'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('2'))));
    case HB_SCRIPT_KANNADA: return ((hb_tag_t)((((uint8_t)('k'))<<24)|(((uint8_t)('n'))<<16)|(((uint8_t)('d'))<<8)|((uint8_t)('2'))));
    case HB_SCRIPT_MALAYALAM: return ((hb_tag_t)((((uint8_t)('m'))<<24)|(((uint8_t)('l'))<<16)|(((uint8_t)('m'))<<8)|((uint8_t)('2'))));
    case HB_SCRIPT_ORIYA: return ((hb_tag_t)((((uint8_t)('o'))<<24)|(((uint8_t)('r'))<<16)|(((uint8_t)('y'))<<8)|((uint8_t)('2'))));
    case HB_SCRIPT_TAMIL: return ((hb_tag_t)((((uint8_t)('t'))<<24)|(((uint8_t)('m'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('2'))));
    case HB_SCRIPT_TELUGU: return ((hb_tag_t)((((uint8_t)('t'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('2'))));
    case HB_SCRIPT_MYANMAR: return ((hb_tag_t)((((uint8_t)('m'))<<24)|(((uint8_t)('y'))<<16)|(((uint8_t)('m'))<<8)|((uint8_t)('2'))));
  }

  return ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('F'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)('T'))));
}

static hb_script_t
hb_ot_new_tag_to_script (hb_tag_t tag)
{
  switch (tag) {
    case ((hb_tag_t)((((uint8_t)('b'))<<24)|(((uint8_t)('n'))<<16)|(((uint8_t)('g'))<<8)|((uint8_t)('2')))): return HB_SCRIPT_BENGALI;
    case ((hb_tag_t)((((uint8_t)('d'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('v'))<<8)|((uint8_t)('2')))): return HB_SCRIPT_DEVANAGARI;
    case ((hb_tag_t)((((uint8_t)('g'))<<24)|(((uint8_t)('j'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('2')))): return HB_SCRIPT_GUJARATI;
    case ((hb_tag_t)((((uint8_t)('g'))<<24)|(((uint8_t)('u'))<<16)|(((uint8_t)('r'))<<8)|((uint8_t)('2')))): return HB_SCRIPT_GURMUKHI;
    case ((hb_tag_t)((((uint8_t)('k'))<<24)|(((uint8_t)('n'))<<16)|(((uint8_t)('d'))<<8)|((uint8_t)('2')))): return HB_SCRIPT_KANNADA;
    case ((hb_tag_t)((((uint8_t)('m'))<<24)|(((uint8_t)('l'))<<16)|(((uint8_t)('m'))<<8)|((uint8_t)('2')))): return HB_SCRIPT_MALAYALAM;
    case ((hb_tag_t)((((uint8_t)('o'))<<24)|(((uint8_t)('r'))<<16)|(((uint8_t)('y'))<<8)|((uint8_t)('2')))): return HB_SCRIPT_ORIYA;
    case ((hb_tag_t)((((uint8_t)('t'))<<24)|(((uint8_t)('m'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('2')))): return HB_SCRIPT_TAMIL;
    case ((hb_tag_t)((((uint8_t)('t'))<<24)|(((uint8_t)('e'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('2')))): return HB_SCRIPT_TELUGU;
    case ((hb_tag_t)((((uint8_t)('m'))<<24)|(((uint8_t)('y'))<<16)|(((uint8_t)('m'))<<8)|((uint8_t)('2')))): return HB_SCRIPT_MYANMAR;
  }

  return HB_SCRIPT_UNKNOWN;
}
# 129 "../../../libs/harfbuzz-ng/src/hb-ot-tag.cc"
void
hb_ot_tags_from_script (hb_script_t script,
   hb_tag_t *script_tag_1,
   hb_tag_t *script_tag_2)
{
  hb_tag_t new_tag;

  *script_tag_2 = ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('F'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)('T'))));
  *script_tag_1 = hb_ot_old_tag_from_script (script);

  new_tag = hb_ot_new_tag_from_script (script);
  if ((new_tag != ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('F'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)('T')))))) {
    *script_tag_2 = *script_tag_1;
    *script_tag_1 = new_tag;
  }
}

hb_script_t
hb_ot_tag_to_script (hb_tag_t tag)
{
  if (((tag & 0x000000FFu) == '2'))
    return hb_ot_new_tag_to_script (tag);

  return hb_ot_old_tag_to_script (tag);
}




typedef struct {
  char language[4];
  hb_tag_t tag;
} LangTag;
# 180 "../../../libs/harfbuzz-ng/src/hb-ot-tag.cc"
static const LangTag ot_languages[] = {
  {"aa", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('F'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"ab", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('B'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"abq", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('B'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"ach", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('C'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"ada", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"ady", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('Y'))<<8)|((uint8_t)(' '))))},
  {"af", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('F'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"aii", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('W'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"aio", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"aiw", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"ak", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('W'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"alt", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"am", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"amf", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('B'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"an", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"ang", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"ar", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"arb", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"arn", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"ary", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"as", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"ast", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"ath", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"atv", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"av", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('V'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"awa", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('W'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"ay", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('Y'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"az", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('Z'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"azb", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('Z'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"azj", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('Z'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"ba", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"bai", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"bal", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"ban", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"bar", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"bbc", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('B'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))},
  {"bci", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('U'))<<8)|((uint8_t)(' '))))},
  {"bcl", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"bcq", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('C'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"be", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"bem", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"ber", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"bfq", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"bft", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"bfy", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"bg", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"bgc", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))},
  {"bgq", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('Q'))<<8)|((uint8_t)(' '))))},
  {"bhb", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"bhk", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"bho", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"bi", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"bik", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"bin", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"bjj", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('J'))<<16)|(((uint8_t)('J'))<<8)|((uint8_t)(' '))))},
  {"bjt", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"bla", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('K'))<<16)|(((uint8_t)('F'))<<8)|((uint8_t)(' '))))},
  {"ble", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"blk", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"bln", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"bm", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"bn", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"bo", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"bpy", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('P'))<<16)|(((uint8_t)('Y'))<<8)|((uint8_t)(' '))))},
  {"bqi", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))},
  {"br", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"bra", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"brh", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"brx", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('X'))<<8)|((uint8_t)(' '))))},
  {"bs", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"btb", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"bto", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"bts", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"bug", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"bxr", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('B'))<<16)|(((uint8_t)('U'))<<8)|((uint8_t)(' '))))},
  {"byn", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"ca", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"cbk", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('B'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"ce", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"ceb", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"cgg", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"ch", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"cho", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"chp", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"chr", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"chy", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('Y'))<<8)|((uint8_t)(' '))))},
  {"ckb", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"ckt", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"cop", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"cr", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"crh", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"crj", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('C'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"crl", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('C'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"crm", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('C'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"crx", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"cs", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('Y'))<<8)|((uint8_t)(' '))))},
  {"csb", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"ctg", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"cts", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"cu", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"cv", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('U'))<<8)|((uint8_t)(' '))))},
  {"cwd", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('C'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"cy", ((hb_tag_t)((((uint8_t)('W'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"da", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"dap", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"dar", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"de", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('U'))<<8)|((uint8_t)(' '))))},
  {"dgo", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"dhd", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"din", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"diq", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('Q'))<<8)|((uint8_t)(' '))))},
  {"dje", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('J'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"dng", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"doi", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"dsb", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"dv", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('V'))<<8)|((uint8_t)(' '))))},
  {"dyu", ((hb_tag_t)((((uint8_t)('J'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"dz", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('Z'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"ee", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('W'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"efi", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('F'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"ekk", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"el", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"emk", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"en", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"eo", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"eot", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"es", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"et", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"eu", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('Q'))<<8)|((uint8_t)(' '))))},
  {"eve", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('V'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"evn", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('V'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"fa", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"ff", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"fi", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"fil", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"fj", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('J'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"fo", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"fon", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"fr", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"frc", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))},
  {"frp", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"fur", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"fuv", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('V'))<<8)|((uint8_t)(' '))))},
  {"fy", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"ga", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"gaa", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"gag", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"gbm", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"gd", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"gez", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"ggo", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"gl", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"gld", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"glk", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"gn", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"gno", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"gog", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"gon", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"grt", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"gru", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"gu", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('J'))<<8)|((uint8_t)(' '))))},
  {"guc", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))},
  {"guk", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},

  {"guz", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"gv", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('X'))<<8)|((uint8_t)(' '))))},
  {"ha", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('U'))<<8)|((uint8_t)(' '))))},
  {"har", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"haw", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"hay", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('Y'))<<8)|((uint8_t)(' '))))},
  {"haz", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"he", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('W'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"hz", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"hi", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"hil", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"hnd", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"hne", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"hno", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"ho", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"hoc", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)(' '))<<8)|((uint8_t)(' '))))},
  {"hoj", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"hr", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('V'))<<8)|((uint8_t)(' '))))},
  {"hsb", ((hb_tag_t)((((uint8_t)('U'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"ht", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"hu", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"hy", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('Y'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"hz", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"ia", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"ibb", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('B'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"id", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"ie", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"ig", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('B'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"igb", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('B'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"ijc", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('J'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"ijo", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('J'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"ik", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('P'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"ilo", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"inh", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"io", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"is", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"it", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"iu", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('U'))<<8)|((uint8_t)(' '))))},
  {"ja", ((hb_tag_t)((((uint8_t)('J'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"jam", ((hb_tag_t)((((uint8_t)('J'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"jbo", ((hb_tag_t)((((uint8_t)('J'))<<24)|(((uint8_t)('B'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"jv", ((hb_tag_t)((((uint8_t)('J'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('V'))<<8)|((uint8_t)(' '))))},
  {"ka", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"kaa", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"kab", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"kam", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"kar", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"kbd", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"kde", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"kdr", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"kdt", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('Y'))<<8)|((uint8_t)(' '))))},
  {"kex", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('K'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"kfr", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))},
  {"kfy", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"kg", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"kha", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"khb", ((hb_tag_t)((((uint8_t)('X'))<<24)|(((uint8_t)('B'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"kht", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},

  {"khw", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"ki", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"kj", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"kjh", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"kjp", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('J'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"kk", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"kl", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"kln", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"km", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"kmb", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('B'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"kmw", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"kn", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"knn", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"ko", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"koi", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"kok", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"kpe", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('P'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"kpv", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"kpy", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('Y'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"kqy", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"kr", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"kri", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"krl", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"kru", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('U'))<<8)|((uint8_t)(' '))))},
  {"ks", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"ksh", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},

  {"ksw", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"ku", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"kum", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"kv", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"kvd", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"kw", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"kxc", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"kxu", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"ky", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"kyu", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('Y'))<<16)|(((uint8_t)('U'))<<8)|((uint8_t)(' '))))},
  {"la", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"lad", ((hb_tag_t)((((uint8_t)('J'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"lb", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"lbe", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"lbj", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"lez", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"lg", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"li", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"lif", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"lij", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('J'))<<8)|((uint8_t)(' '))))},
  {"lis", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"ljp", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('J'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"lki", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('K'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"lld", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"lmn", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"lmo", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"ln", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"lo", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"lrc", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))},
  {"lt", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"lu", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"lua", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"luo", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"lus", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"luy", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"luz", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))},
  {"lv", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('V'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"lzz", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"mad", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"mag", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"mai", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"mak", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('K'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"man", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"mdc", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"mdf", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"mdr", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"mdy", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"men", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"mer", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"mfe", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('F'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"mg", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"mh", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"mhr", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"mi", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"min", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"mk", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('K'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"mku", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"mkw", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('K'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"ml", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"mlq", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"mn", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"mnc", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('C'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"mni", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"mnk", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"mns", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"mnw", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"mo", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"moh", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"mos", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"mpe", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('J'))<<8)|((uint8_t)(' '))))},
  {"mr", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"mrj", ((hb_tag_t)((((uint8_t)('H'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"ms", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('Y'))<<8)|((uint8_t)(' '))))},
  {"msc", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"mt", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"mtr", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"mus", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"mve", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"mwk", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"mwl", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('W'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"mwr", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"mww", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('W'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"my", ((hb_tag_t)((((uint8_t)('B'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"mym", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"myq", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"myv", ((hb_tag_t)((((uint8_t)('E'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"mzn", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('Z'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"na", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('U'))<<8)|((uint8_t)(' '))))},
  {"nag", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"nah", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"nap", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"nb", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"nco", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"nd", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"ndc", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))},
  {"nds", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"ne", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"new", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"ng", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"nga", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"ngl", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"niu", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('U'))<<8)|((uint8_t)(' '))))},
  {"niv", ((hb_tag_t)((((uint8_t)('G'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"nl", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"nn", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('Y'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"no", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"nod", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"noe", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"nog", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"nov", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('V'))<<8)|((uint8_t)(' '))))},
  {"nqo", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('K'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"nr", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"nsk", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"nso", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"ny", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"nym", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('Y'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"nyn", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('K'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"oc", ((hb_tag_t)((((uint8_t)('O'))<<24)|(((uint8_t)('C'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"oj", ((hb_tag_t)((((uint8_t)('O'))<<24)|(((uint8_t)('J'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"ojs", ((hb_tag_t)((((uint8_t)('O'))<<24)|(((uint8_t)('C'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"om", ((hb_tag_t)((((uint8_t)('O'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"or", ((hb_tag_t)((((uint8_t)('O'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"os", ((hb_tag_t)((((uint8_t)('O'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"pa", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"pag", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"pam", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"pap", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"pcc", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('C'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))},
  {"pcd", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('C'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"pce", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"pdc", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))},
  {"pes", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"phk", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"pi", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"pih", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"pl", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"pll", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"plp", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"pms", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"pnb", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"prs", ((hb_tag_t)((((uint8_t)('D'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"ps", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"pt", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"pwo", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('W'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"qu", ((hb_tag_t)((((uint8_t)('Q'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"quc", ((hb_tag_t)((((uint8_t)('Q'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))},
  {"quz", ((hb_tag_t)((((uint8_t)('Q'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"raj", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('J'))<<8)|((uint8_t)(' '))))},
  {"rbb", ((hb_tag_t)((((uint8_t)('P'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"rej", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('J'))<<8)|((uint8_t)(' '))))},
  {"ria", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"ril", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"rki", ((hb_tag_t)((((uint8_t)('A'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"rm", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"rmy", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('Y'))<<8)|((uint8_t)(' '))))},
  {"rn", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"ro", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"rom", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('Y'))<<8)|((uint8_t)(' '))))},
  {"ru", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"rue", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('Y'))<<8)|((uint8_t)(' '))))},
  {"rup", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"rw", ((hb_tag_t)((((uint8_t)('R'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"rwr", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"sa", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"sah", ((hb_tag_t)((((uint8_t)('Y'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"sas", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"sat", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"sck", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"sc", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"scn", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('C'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"sco", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('C'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"scs", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"sd", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"se", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"seh", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"sel", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"sg", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"sga", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"sgs", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"sgw", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},

  {"shn", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"si", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"sid", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"sjd", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"sk", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('K'))<<16)|(((uint8_t)('Y'))<<8)|((uint8_t)(' '))))},
  {"skr", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"sl", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('V'))<<8)|((uint8_t)(' '))))},
  {"sm", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"sma", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"smj", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"smn", ((hb_tag_t)((((uint8_t)('I'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"sms", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('K'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"sn", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"snk", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"so", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"sop", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('P'))<<8)|((uint8_t)(' '))))},
  {"sq", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('Q'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"sr", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"srr", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"ss", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('W'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"st", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"stq", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('Q'))<<8)|((uint8_t)(' '))))},
  {"stv", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"su", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"suk", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"suq", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"sv", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('V'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"sva", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('V'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"sw", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('W'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"swb", ((hb_tag_t)((((uint8_t)('C'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"swh", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('W'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"swv", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"sxu", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('X'))<<16)|(((uint8_t)('U'))<<8)|((uint8_t)(' '))))},
  {"syl", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('Y'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"syr", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('Y'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"szl", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('Z'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"ta", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"tab", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"tcy", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"tdd", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"te", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"tem", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"tet", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"tg", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('J'))<<8)|((uint8_t)(' '))))},
  {"th", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"ti", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('Y'))<<8)|((uint8_t)(' '))))},
  {"tig", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"tiv", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('V'))<<8)|((uint8_t)(' '))))},
  {"tk", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('K'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"tl", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"tmh", ((hb_tag_t)((((uint8_t)('t'))<<24)|(((uint8_t)('m'))<<16)|(((uint8_t)('h'))<<8)|((uint8_t)(' '))))},
  {"tn", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"to", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('G'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"tpi", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('P'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"tr", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"tru", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"ts", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"tt", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"tum", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"tw", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('W'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"ty", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"tyv", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('V'))<<8)|((uint8_t)(' '))))},
  {"tyz", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('Y'))<<16)|(((uint8_t)('Z'))<<8)|((uint8_t)(' '))))},
  {"tzm", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('Z'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"udm", ((hb_tag_t)((((uint8_t)('U'))<<24)|(((uint8_t)('D'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"ug", ((hb_tag_t)((((uint8_t)('U'))<<24)|(((uint8_t)('Y'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"uk", ((hb_tag_t)((((uint8_t)('U'))<<24)|(((uint8_t)('K'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"umb", ((hb_tag_t)((((uint8_t)('U'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"unr", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"ur", ((hb_tag_t)((((uint8_t)('U'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"uz", ((hb_tag_t)((((uint8_t)('U'))<<24)|(((uint8_t)('Z'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"uzn", ((hb_tag_t)((((uint8_t)('U'))<<24)|(((uint8_t)('Z'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"uzs", ((hb_tag_t)((((uint8_t)('U'))<<24)|(((uint8_t)('Z'))<<16)|(((uint8_t)('B'))<<8)|((uint8_t)(' '))))},
  {"ve", ((hb_tag_t)((((uint8_t)('V'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"vec", ((hb_tag_t)((((uint8_t)('V'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))},
  {"vls", ((hb_tag_t)((((uint8_t)('F'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('E'))<<8)|((uint8_t)(' '))))},
  {"vi", ((hb_tag_t)((((uint8_t)('V'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"vmw", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('K'))<<8)|((uint8_t)(' '))))},
  {"vo", ((hb_tag_t)((((uint8_t)('V'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"vro", ((hb_tag_t)((((uint8_t)('V'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"wa", ((hb_tag_t)((((uint8_t)('W'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('N'))<<8)|((uint8_t)(' '))))},
  {"war", ((hb_tag_t)((((uint8_t)('W'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('R'))<<8)|((uint8_t)(' '))))},
  {"wbm", ((hb_tag_t)((((uint8_t)('W'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)(' '))<<8)|((uint8_t)(' '))))},
  {"wbr", ((hb_tag_t)((((uint8_t)('W'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"wle", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"wry", ((hb_tag_t)((((uint8_t)('M'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('W'))<<8)|((uint8_t)(' '))))},
  {"wtm", ((hb_tag_t)((((uint8_t)('W'))<<24)|(((uint8_t)('T'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"wo", ((hb_tag_t)((((uint8_t)('W'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('F'))<<8)|((uint8_t)(' '))))},
  {"xal", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('L'))<<16)|(((uint8_t)('M'))<<8)|((uint8_t)(' '))))},
  {"xh", ((hb_tag_t)((((uint8_t)('X'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"xog", ((hb_tag_t)((((uint8_t)('X'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"xom", ((hb_tag_t)((((uint8_t)('K'))<<24)|(((uint8_t)('M'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"xsl", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('S'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"xst", ((hb_tag_t)((((uint8_t)('S'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('G'))<<8)|((uint8_t)(' '))))},
  {"xwo", ((hb_tag_t)((((uint8_t)('T'))<<24)|(((uint8_t)('O'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"yao", ((hb_tag_t)((((uint8_t)('Y'))<<24)|(((uint8_t)('A'))<<16)|(((uint8_t)('O'))<<8)|((uint8_t)(' '))))},
  {"yi", ((hb_tag_t)((((uint8_t)('J'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('I'))<<8)|((uint8_t)(' '))))},
  {"yo", ((hb_tag_t)((((uint8_t)('Y'))<<24)|(((uint8_t)('B'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"yso", ((hb_tag_t)((((uint8_t)('N'))<<24)|(((uint8_t)('I'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"za", ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"zea", ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('E'))<<16)|(((uint8_t)('A'))<<8)|((uint8_t)(' '))))},
  {"zne", ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('N'))<<16)|(((uint8_t)('D'))<<8)|((uint8_t)(' '))))},
  {"zu", ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('U'))<<16)|(((uint8_t)('L'))<<8)|((uint8_t)(' '))))},
  {"zum", ((hb_tag_t)((((uint8_t)('L'))<<24)|(((uint8_t)('R'))<<16)|(((uint8_t)('C'))<<8)|((uint8_t)(' '))))}
# 764 "../../../libs/harfbuzz-ng/src/hb-ot-tag.cc"
};

typedef struct {
  char language[8];
  hb_tag_t tag;
} LangTagLong;
static const LangTagLong ot_languages_zh[] = {
  {"zh-cn", ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"zh-hk", ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' '))))},
  {"zh-mo", ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"zh-sg", ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"zh-tw", ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
  {"zh-hans", ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))))},
  {"zh-hant", ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' '))))},
};

static int
lang_compare_first_component (const char *a,
         const char *b)
{
  unsigned int da, db;
  const char *p;

  p = strchr (a, '-');
  da = p ? (unsigned int) (p - a) : strlen (a);

  p = strchr (b, '-');
  db = p ? (unsigned int) (p - b) : strlen (b);

  return strncmp (a, b, MAX (da, db));
}

static hb_bool_t
lang_matches (const char *lang_str, const char *spec)
{
  unsigned int len = strlen (spec);

  return strncmp (lang_str, spec, len) == 0 &&
  (lang_str[len] == '\0' || lang_str[len] == '-');
}

hb_tag_t
hb_ot_tag_from_language (hb_language_t language)
{
  const char *lang_str, *s;

  if (language == ((hb_language_t) __null))
    return ((hb_tag_t)((((uint8_t)('d'))<<24)|(((uint8_t)('f'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('t'))));

  lang_str = hb_language_to_string (language);

  s = strstr (lang_str, "x-hbot");
  if (s) {
    char tag[4];
    int i;
    s += 6;
    for (i = 0; i < 4 && ISALPHA (s[i]); i++)
      tag[i] = TOUPPER (s[i]);
    if (i) {
      for (; i < 4; i++)
 tag[i] = ' ';
      return (((hb_tag_t)((((uint8_t)(((const char *) tag)[0]))<<24)|(((uint8_t)(((const char *) tag)[1]))<<16)|(((uint8_t)(((const char *) tag)[2]))<<8)|((uint8_t)(((const char *) tag)[3])))));
    }
  }


  {
    const LangTag *lang_tag;
    lang_tag = (LangTag *) bsearch (lang_str, ot_languages,
        ARRAY_LENGTH (ot_languages), sizeof (LangTag),
        (hb_compare_func_t) lang_compare_first_component);
    if (lang_tag)
      return lang_tag->tag;
  }


  if (0 == lang_compare_first_component (lang_str, "zh"))
  {
    unsigned int i;

    for (i = 0; i < ARRAY_LENGTH (ot_languages_zh); i++)
    {
      const LangTagLong *lang_tag;
      lang_tag = &ot_languages_zh[i];
      if (lang_matches (lang_str, lang_tag->language))
 return lang_tag->tag;
    }


    return ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' '))));
  }

  s = strchr (lang_str, '-');
  if (!s)
    s = lang_str + strlen (lang_str);
  if (s - lang_str == 3) {

    return hb_tag_from_string (lang_str, s - lang_str) & ~0x20202000u;
  }

  return ((hb_tag_t)((((uint8_t)('d'))<<24)|(((uint8_t)('f'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('t'))));
}

hb_language_t
hb_ot_tag_to_language (hb_tag_t tag)
{
  unsigned int i;

  if (tag == ((hb_tag_t)((((uint8_t)('d'))<<24)|(((uint8_t)('f'))<<16)|(((uint8_t)('l'))<<8)|((uint8_t)('t')))))
    return __null;

  for (i = 0; i < ARRAY_LENGTH (ot_languages); i++)
    if (ot_languages[i].tag == tag)
      return hb_language_from_string (ot_languages[i].language, -1);


  if ((tag & 0xFFFF0000u) == 0x5A480000u) {
    switch (tag) {
      case ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('H'))<<8)|((uint8_t)(' ')))): return hb_language_from_string ("zh-hk", -1);
      case ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('S'))<<8)|((uint8_t)(' ')))): return hb_language_from_string ("zh-Hans", -1);
      case ((hb_tag_t)((((uint8_t)('Z'))<<24)|(((uint8_t)('H'))<<16)|(((uint8_t)('T'))<<8)|((uint8_t)(' ')))): return hb_language_from_string ("zh-Hant", -1);
      default: break;
    }
  }


  {
    unsigned char buf[11] = "x-hbot";
    buf[6] = tag >> 24;
    buf[7] = (tag >> 16) & 0xFF;
    buf[8] = (tag >> 8) & 0xFF;
    buf[9] = tag & 0xFF;
    if (buf[9] == 0x20)
      buf[9] = '\0';
    buf[10] = '\0';
    return hb_language_from_string ((char *) buf, -1);
  }
}
